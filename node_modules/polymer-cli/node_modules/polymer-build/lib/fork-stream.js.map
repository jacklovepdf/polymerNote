{"version":3,"sources":["../src/fork-stream.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;;;;;;;;;;;;;;;;;;AAIH,uCAA+C;AAE/C,oBAA2B,MAA6B;IAEtD,MAAM,IAAI,GAAG,IAAI,iBAAiB,EAAE,CAAC;IACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClB,OAAO,IAAI,CAAC;AACd,CAAC;AALD,gCAKC;AAED;;GAEG;AACH,uBAA+B,SAAQ,8BAAgC;IACrE;QACE,KAAK,CAAC,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC,CAAC;IAC5B,CAAC;IAGG,cAAc,CAAC,KAA0B;;;gBAC3C,KAAyB,IAAA,UAAA,cAAA,KAAK,CAAA,WAAA;oBAAnB,MAAM,IAAI,iCAAA,CAAA;oBACnB,MAAM,IAAI,CAAC,KAAK,CAAC,EAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;iBAChD;;;;;;;;;;QACH,CAAC;KAAA;CACF;AAXD,8CAWC","file":"fork-stream.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport File = require('vinyl');\n\nimport {AsyncTransformStream} from './streams';\n\nexport function forkStream(stream: NodeJS.ReadableStream):\n    NodeJS.ReadableStream {\n  const fork = new ForkedVinylStream();\n  stream.pipe(fork);\n  return fork;\n}\n\n/**\n * Forks a stream of Vinyl files, cloning each file before emitting on the fork.\n */\nexport class ForkedVinylStream extends AsyncTransformStream<File, File> {\n  constructor() {\n    super({objectMode: true});\n  }\n\n  protected async *\n      _transformIter(files: AsyncIterable<File>): AsyncIterable<File> {\n    for await (const file of files) {\n      yield file.clone({deep: true, contents: true});\n    }\n  }\n}\n"]}