{"version":3,"sources":["../src/html-splitter.ts"],"names":[],"mappings":"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","file":"html-splitter.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as assert from 'assert';\nimport * as dom5 from 'dom5/lib/index-next';\nimport * as parse5 from 'parse5';\nimport * as osPath from 'path';\nimport {Transform} from 'stream';\nimport File = require('vinyl');\nimport {AsyncTransformStream, getFileContents} from './streams';\n\nconst pred = dom5.predicates;\n\nconst extensionsForType: {[mimetype: string]: string} = {\n  'text/ecmascript-6': 'js',\n  'application/javascript': 'js',\n  'text/javascript': 'js',\n  'application/x-typescript': 'ts',\n  'text/x-typescript': 'ts',\n  'module': 'js',\n};\n\n/**\n * HTMLSplitter represents the shared state of files as they are passed through\n * a splitting stream and then a rejoining stream. Creating a new instance of\n * HTMLSplitter and adding its streams to the build pipeline is the\n * supported user interface for splitting out and rejoining inlined CSS & JS in\n * the build process.\n */\nexport class HtmlSplitter {\n  private _splitFiles: Map<string, SplitFile> = new Map();\n  private _parts: Map<string, SplitFile> = new Map();\n\n  /**\n   * Returns a new `Transform` stream that splits inline script and styles into\n   * new, separate files that are passed out of the stream.\n   */\n  split(): Transform {\n    return new HtmlSplitTransform(this);\n  }\n\n  /**\n   * Returns a new `Transform` stream that rejoins inline scripts and styles\n   * that were originally split from this `HTMLSplitter`'s `split()` back into\n   * their parent HTML files.\n   */\n  rejoin(): Transform {\n    return new HtmlRejoinTransform(this);\n  }\n\n  isSplitFile(parentPath: string): boolean {\n    return this._splitFiles.has(parentPath);\n  }\n\n  getSplitFile(parentPath: string): SplitFile {\n    // TODO(justinfagnani): rewrite so that processing a parent file twice\n    // throws to protect against bad configurations of multiple streams that\n    // contain the same file multiple times.\n    let splitFile = this._splitFiles.get(parentPath);\n    if (!splitFile) {\n      splitFile = new SplitFile(parentPath);\n      this._splitFiles.set(parentPath, splitFile);\n    }\n    return splitFile;\n  }\n\n  addSplitPath(parentPath: string, childPath: string): void {\n    const splitFile = this.getSplitFile(parentPath);\n    splitFile.addPartPath(childPath);\n    this._parts.set(childPath, splitFile);\n  }\n\n  getParentFile(childPath: string): SplitFile|undefined {\n    return this._parts.get(childPath);\n  }\n}\n\nconst htmlSplitterAttribute = 'html-splitter';\n\n/**\n * Returns whether the given script tag was an inline script that was split out\n * into a fake file by HtmlSplitter.\n */\nexport function scriptWasSplitByHtmlSplitter(script: dom5.Node): boolean {\n  return dom5.hasAttribute(script, htmlSplitterAttribute);\n}\n\nexport type HtmlSplitterFile = File&{\n  fromHtmlSplitter?: true;\n  isModule?: boolean\n};\n\n/**\n * Return whether the given Vinyl file was created by the HtmlSplitter from an\n * HTML document script tag.\n */\nexport function isHtmlSplitterFile(file: File): file is HtmlSplitterFile {\n  return file.fromHtmlSplitter === true;\n}\n\n/**\n * Represents a file that is split into multiple files.\n */\nexport class SplitFile {\n  path: string;\n  parts: Map<string, string|null> = new Map();\n  outstandingPartCount = 0;\n  vinylFile: File|null = null;\n\n  constructor(path: string) {\n    this.path = path;\n  }\n\n  addPartPath(path: string): void {\n    this.parts.set(path, null);\n    this.outstandingPartCount++;\n  }\n\n  setPartContent(path: string, content: string): void {\n    assert(\n        this.parts.get(path) !== undefined,\n        `Trying to save unexpected file part \"${path}\".`);\n    assert(\n        this.parts.get(path) === null,\n        `Trying to save already-saved file part \"${path}\".`);\n    assert(\n        this.outstandingPartCount > 0,\n        `Trying to save valid file part \"${path}\", ` +\n            `but somehow no file parts are outstanding.`);\n    this.parts.set(path, content);\n    this.outstandingPartCount--;\n  }\n\n  get isComplete(): boolean {\n    return this.outstandingPartCount === 0 && this.vinylFile != null;\n  }\n}\n\n/**\n * Splits HTML files, extracting scripts and styles into separate File objects.\n */\nclass HtmlSplitTransform extends AsyncTransformStream<File, File> {\n  _state: HtmlSplitter;\n\n  constructor(splitter: HtmlSplitter) {\n    super({objectMode: true});\n    this._state = splitter;\n  }\n\n  protected async *\n      _transformIter(files: AsyncIterable<File>): AsyncIterable<File> {\n    for await (const file of files) {\n      const filePath = osPath.normalize(file.path);\n      if (!(file.contents && filePath.endsWith('.html'))) {\n        yield file;\n        continue;\n      }\n      const contents = await getFileContents(file);\n      const doc = parse5.parse(contents, {locationInfo: true});\n      dom5.removeFakeRootElements(doc);\n      const scriptTags = [...dom5.queryAll(doc, pred.hasTagName('script'))];\n      for (let i = 0; i < scriptTags.length; i++) {\n        const scriptTag = scriptTags[i];\n        const source = dom5.getTextContent(scriptTag);\n        const typeAttribute =\n            dom5.getAttribute(scriptTag, 'type') || 'application/javascript';\n        const extension = extensionsForType[typeAttribute];\n        // If we don't recognize the script type attribute, don't split\n        // out.\n        if (!extension) {\n          continue;\n        }\n\n        const isInline = !dom5.hasAttribute(scriptTag, 'src');\n\n        if (isInline) {\n          const childFilename =\n              `${osPath.basename(filePath)}_script_${i}.${extension}`;\n          const childPath =\n              osPath.join(osPath.dirname(filePath), childFilename);\n          scriptTag.childNodes = [];\n          dom5.setAttribute(scriptTag, 'src', childFilename);\n          dom5.setAttribute(scriptTag, htmlSplitterAttribute, '');\n          const scriptFile: HtmlSplitterFile = new File({\n            cwd: file.cwd,\n            base: file.base,\n            path: childPath,\n            contents: new Buffer(source),\n          });\n          scriptFile.fromHtmlSplitter = true;\n          scriptFile.isModule = typeAttribute === 'module';\n          this._state.addSplitPath(filePath, childPath);\n          this.push(scriptFile);\n        }\n      }\n\n      const splitContents = parse5.serialize(doc);\n      const newFile = new File({\n        cwd: file.cwd,\n        base: file.base,\n        path: filePath,\n        contents: new Buffer(splitContents),\n      });\n      yield newFile;\n    }\n  }\n}\n\n\n/**\n * Joins HTML files originally split by `Splitter`, based on the relationships\n * stored in its HTMLSplitter state.\n */\nclass HtmlRejoinTransform extends AsyncTransformStream<File, File> {\n  static isExternalScript =\n      pred.AND(pred.hasTagName('script'), pred.hasAttr('src'));\n\n  _state: HtmlSplitter;\n\n  constructor(splitter: HtmlSplitter) {\n    super({objectMode: true});\n    this._state = splitter;\n  }\n\n  protected async *\n      _transformIter(files: AsyncIterable<File>): AsyncIterable<File> {\n    for await (const file of files) {\n      const filePath = osPath.normalize(file.path);\n      if (this._state.isSplitFile(filePath)) {\n        // this is a parent file\n        const splitFile = this._state.getSplitFile(filePath);\n        splitFile.vinylFile = file;\n        if (splitFile.isComplete) {\n          yield await this._rejoin(splitFile);\n        } else {\n          splitFile.vinylFile = file;\n        }\n      } else {\n        const parentFile = this._state.getParentFile(filePath);\n        if (parentFile) {\n          // this is a child file\n          parentFile.setPartContent(filePath, file.contents!.toString());\n          if (parentFile.isComplete) {\n            yield await this._rejoin(parentFile);\n          }\n        } else {\n          yield file;\n        }\n      }\n    }\n  }\n\n  async _rejoin(splitFile: SplitFile) {\n    const file = splitFile.vinylFile;\n    if (file == null) {\n      throw new Error(`Internal error: no vinylFile found for splitfile: ${\n          splitFile.path}`);\n    }\n    const filePath = osPath.normalize(file.path);\n    const contents = await getFileContents(file);\n    const doc = parse5.parse(contents, {locationInfo: true});\n    dom5.removeFakeRootElements(doc);\n    const scriptTags = dom5.queryAll(doc, HtmlRejoinTransform.isExternalScript);\n\n    for (const scriptTag of scriptTags) {\n      const srcAttribute = dom5.getAttribute(scriptTag, 'src')!;\n      const scriptPath =\n          osPath.join(osPath.dirname(splitFile.path), srcAttribute);\n      const scriptSource = splitFile.parts.get(scriptPath);\n      if (scriptSource != null) {\n        dom5.setTextContent(scriptTag, scriptSource);\n        dom5.removeAttribute(scriptTag, 'src');\n        dom5.removeAttribute(scriptTag, htmlSplitterAttribute);\n      }\n    }\n\n    const joinedContents = parse5.serialize(doc);\n\n    return new File({\n      cwd: file.cwd,\n      base: file.base,\n      path: filePath,\n      contents: new Buffer(joinedContents),\n    });\n  }\n}\n"]}