{"version":3,"sources":["../src/test/bundle_test.ts"],"names":[],"mappings":"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","file":"bundle_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {assert} from 'chai';\nimport {FsUrlResolver, PackageRelativeUrl, ResolvedUrl} from 'polymer-analyzer';\nimport {Bundle} from 'polymer-bundler';\nimport {ProjectConfig, ProjectOptions} from 'polymer-project-config';\n\nimport File = require('vinyl');\nimport * as dom5 from 'dom5/lib/index-next';\nimport {ASTNode, parse as parse5} from 'parse5';\nimport * as path from 'path';\nimport {Stream} from 'stream';\nconst mergeStream = require('merge-stream');\n\nimport {BuildAnalyzer} from '../analyzer';\nimport {BuildBundler, Options as BuildBundlerOptions} from '../bundle';\nimport {LocalFsPath} from '../path-transformers';\nimport {AsyncTransformStream} from '../streams';\n\nconst defaultRoot = path.resolve('test-fixtures/bundler-data');\n\nclass FileTransform extends AsyncTransformStream<File, {}> {\n  transform: (s: FileTransform, f: File) => void;\n  constructor(transform: (s: FileTransform, f: File) => void) {\n    super({objectMode: true});\n    this.transform = transform;\n  }\n  protected async *\n      _transformIter(files: AsyncIterable<File>): AsyncIterable<{}> {\n    for await (const file of files) {\n      this.transform(this, file.clone());\n    }\n  }\n}\n\nfunction resolveUrls(root: string, urls: string[]): ResolvedUrl[] {\n  const resolver = new FsUrlResolver(root);\n  return urls.map((u) => resolver.resolve(u as PackageRelativeUrl)!);\n}\n\nsuite('BuildBundler', () => {\n  let root: string;\n  let bundler: BuildBundler;\n  let bundledStream: Stream;\n  let files: Map<string, File>;\n\n  const setupTest = async (\n      projectOptions: ProjectOptions,\n      bundlerOptions?: BuildBundlerOptions,\n      transform?: FileTransform) => new Promise((resolve, reject) => {\n    if (projectOptions.root === undefined) {\n      throw new Error('projectOptions.root is undefined');\n    }\n    root = projectOptions.root;\n    const config = new ProjectConfig(projectOptions);\n    const analyzer = new BuildAnalyzer(config);\n\n    bundler = new BuildBundler(config, analyzer, bundlerOptions);\n    bundledStream = mergeStream(analyzer.sources(), analyzer.dependencies());\n    if (transform) {\n      bundledStream = bundledStream.pipe(transform);\n    }\n    bundledStream = bundledStream.pipe(bundler);\n    bundler = new BuildBundler(config, analyzer);\n    files = new Map<LocalFsPath, File>();\n    bundledStream.on('data', (file: File) => {\n      files.set(file.path, file);\n    });\n    bundledStream.on('end', () => {\n      resolve(files);\n    });\n    bundledStream.on('error', (err: Error) => {\n      reject(err);\n    });\n  });\n\n  const getFile = (filename: string) => {\n    // we're getting FS paths, so add root\n    const file = files.get(path.resolve(root, filename));\n    return file && file.contents && file.contents.toString();\n  };\n\n  const getFileOrDie = (filename: string) => {\n    const file = getFile(filename);\n    if (file == null) {\n      throw new Error(`Unable to get file with filename ${filename}`);\n    }\n    return file;\n  };\n\n  const hasMarker = (doc: ASTNode, id: string) => {\n    const marker = dom5.query(\n        doc,\n        dom5.predicates.AND(\n            dom5.predicates.hasTagName('div'),\n            dom5.predicates.hasAttrValue('id', id)));\n    return marker != null;\n  };\n\n  const hasImport = (doc: ASTNode, url: string) => {\n    const link = dom5.query(\n        doc,\n        dom5.predicates.AND(\n            dom5.predicates.hasTagName('link'),\n            dom5.predicates.hasAttrValue('rel', 'import'),\n            dom5.predicates.hasAttrValue('href', url)));\n    return link != null;\n  };\n\n  const addHeaders = new FileTransform((stream, file) => {\n    if (path.extname(file.path) === '.html') {\n      file.contents =\n          new Buffer(`<!-- ${path.basename(file.path)} -->${file.contents}`);\n    } else if (path.extname(file.path).match(/^\\.(js|css)$/)) {\n      file.contents =\n          new Buffer(`/* ${path.basename(file.path)} */${file.contents}`);\n    }\n    stream.push(file);\n  });\n\n  test('entrypoint only', async () => {\n    await setupTest({\n      root: defaultRoot,\n      entrypoint: 'entrypoint-only.html',\n    });\n    const doc = parse5(getFileOrDie('entrypoint-only.html'));\n    assert.isTrue(hasMarker(doc, 'framework'), 'has framework');\n    assert.isFalse(hasImport(doc, 'framework.html'));\n    assert.isNotOk(getFile('shared_bundle_1.html'));\n  });\n\n  test('two fragments', async () => {\n    await setupTest({\n      root: defaultRoot,\n      entrypoint: 'entrypoint-a.html',\n      fragments: ['shell.html', 'entrypoint-a.html'],\n    });\n\n    // shell doesn't import framework\n    const shellDoc = parse5(getFileOrDie('shell.html'));\n    assert.isFalse(hasMarker(shellDoc, 'framework'));\n    assert.isFalse(hasImport(shellDoc, 'framework.html'));\n\n    // entrypoint doesn't import framework\n    const entrypointDoc = parse5(getFileOrDie('entrypoint-a.html'));\n    assert.isFalse(hasMarker(entrypointDoc, 'framework'));\n    assert.isFalse(hasImport(entrypointDoc, 'framework.html'));\n\n    // No shared-bundle bundles framework\n    const sharedDoc = parse5(getFileOrDie('shared_bundle_1.html'));\n    assert.isTrue(hasMarker(sharedDoc, 'framework'));\n    assert.isFalse(hasImport(sharedDoc, 'framework.html'));\n\n    // fragments import shared-bundle\n    assert.isTrue(hasImport(entrypointDoc, 'shared_bundle_1.html'));\n    assert.isTrue(hasImport(shellDoc, 'shared_bundle_1.html'));\n  });\n\n  // TODO(usergenic): It appears that this test is aspirational.  It wants\n  // build to manipulate the entrypoint to remove things that have been bundled\n  // into the shell, in this case, but we don't yet support manipulating the\n  // entrypoint properly.  In part, this is because entrypoints can not have\n  // relative paths, since they can be served from any url.   Note that the\n  // test 'entrypoint and fragments' below is skipped for the same reason.\n  test.skip('shell and entrypoint', async () => {\n    await setupTest({\n      entrypoint: 'entrypoint-a.html',\n      shell: 'shell.html',\n    });\n\n    // shell bundles framework\n    const shellDoc = parse5(getFileOrDie('shell.html'));\n    assert.isTrue(hasMarker(shellDoc, 'framework'));\n\n    // entrypoint doesn't import framework\n    const entrypointDoc = parse5(getFileOrDie('entrypoint-a.html'));\n    assert.isFalse(hasMarker(entrypointDoc, 'framework'));\n    assert.isFalse(hasImport(entrypointDoc, 'framework.html'));\n\n    // entrypoint imports shell\n    assert.isTrue(hasImport(entrypointDoc, 'shell.html'));\n\n    // No shared-bundle with a shell\n    assert.isNotOk(getFile('shared_bundle_1.html'));\n  });\n\n  test('shell and fragments with shared dependency', async () => {\n    await setupTest({\n      root: defaultRoot,\n      entrypoint: 'entrypoint-a.html',\n      shell: 'shell.html',\n      fragments: ['entrypoint-b.html', 'entrypoint-c.html'],\n    });\n\n    // shell bundles framework\n    const shellDoc = parse5(getFileOrDie('shell.html'));\n    assert.isTrue(hasMarker(shellDoc, 'framework'));\n    assert.isFalse(hasImport(shellDoc, 'framework.html'));\n\n    // shell bundles commonDep\n    assert.isTrue(hasMarker(shellDoc, 'commonDep'));\n    assert.isFalse(hasImport(shellDoc, 'common-dependency.html'));\n\n    // entrypoint B doesn't import commonDep\n    const entrypointBDoc = parse5(getFileOrDie('entrypoint-b.html'));\n    assert.isFalse(hasMarker(entrypointBDoc, 'commonDep'));\n    assert.isFalse(hasImport(entrypointBDoc, 'common-dependency.html'));\n\n    // entrypoint C doesn't import commonDep\n    const entrypointCDoc = parse5(getFileOrDie('entrypoint-c.html'));\n    assert.isFalse(hasMarker(entrypointCDoc, 'commonDep'));\n    assert.isFalse(hasImport(entrypointCDoc, 'common-dependency.html'));\n\n    // entrypoints don't import shell\n    assert.isFalse(hasImport(entrypointBDoc, 'shell.html'));\n    assert.isFalse(hasImport(entrypointCDoc, 'shell.html'));\n\n    // No shared-bundle with a shell\n    assert.isNotOk(getFile('shared_bundle_1.html'));\n  });\n\n  // TODO(usergenic): This test is skipped for the same reason as the test\n  // above called 'shell and entrypoint'.\n  test.skip('entrypoint and fragments', async () => {\n    await setupTest({\n      entrypoint: 'entrypoint-a.html',\n      fragments: [\n        'shell.html',\n        'entrypoint-b.html',\n        'entrypoint-c.html',\n      ],\n    });\n\n    // shared bundle was emitted\n    const bundle = getFileOrDie('shared_bundle_1.html');\n    assert.ok(bundle);\n    const bundleDoc = parse5(bundle);\n\n    // shared-bundle bundles framework\n    assert.isTrue(hasMarker(bundleDoc, 'framework'));\n    assert.isFalse(hasImport(bundleDoc, 'framework.html'));\n\n    // shared-bundle bundles commonDep\n    assert.isTrue(hasMarker(bundleDoc, 'commonDep'));\n    assert.isFalse(hasImport(bundleDoc, 'common-dependency.html'));\n\n    // entrypoint doesn't import framework\n    const entrypointDoc = parse5(getFileOrDie('entrypoint-a.html'));\n    assert.isFalse(hasMarker(entrypointDoc, 'framework'));\n    assert.isFalse(hasImport(entrypointDoc, 'framework.html'));\n\n    // shell doesn't import framework\n    const shellDoc = parse5(getFileOrDie('entrypoint-a.html'));\n    assert.isFalse(hasMarker(shellDoc, 'framework'));\n    assert.isFalse(hasImport(shellDoc, 'framework.html'));\n\n    // entrypoint B doesn't import commonDep\n    const entrypointBDoc = parse5(getFileOrDie('entrypoint-b.html'));\n    assert.isFalse(hasMarker(entrypointBDoc, 'commonDep'));\n    assert.isFalse(hasImport(entrypointBDoc, 'common-dependency.html'));\n\n    // entrypoint C doesn't import commonDep\n    const entrypointCDoc = parse5(getFileOrDie('entrypoint-c.html'));\n    assert.isFalse(hasMarker(entrypointCDoc, 'commonDep'));\n    assert.isFalse(hasImport(entrypointCDoc, 'common-dependency.html'));\n\n    // entrypoint and fragments import shared-bundle\n    assert.isTrue(hasImport(entrypointDoc, 'shared_bundle_1.html'));\n    assert.isTrue(hasImport(entrypointBDoc, 'shared_bundle_1.html'));\n    assert.isTrue(hasImport(entrypointCDoc, 'shared_bundle_1.html'));\n    assert.isTrue(hasImport(shellDoc, 'shared_bundle_1.html'));\n  });\n\n  test('bundler loads changed files from stream', async () => {\n    await setupTest(\n        {\n          root: path.resolve('test-fixtures/bundle-project'),\n          entrypoint: 'index.html',\n        },\n        {},\n        addHeaders);\n\n    const bundledHtml = getFileOrDie('index.html');\n\n    // In setupTest, we use a transform stream that to prepends\n    // each file with a comment including its basename before it makes it\n    // into the bundler.  This verifies that bundler is processing files from\n    // the stream instead of from the filesystem.\n    assert.include(bundledHtml, '<!-- index.html -->');\n    assert.include(bundledHtml, '<!-- simple-import.html -->');\n    assert.include(bundledHtml, '<!-- simple-import-2.html -->');\n    assert.include(bundledHtml, '/* simple-style.css */');\n  });\n\n  test('bundler deals with win32 platform separators on win32', async () => {\n    const platformSepPaths = new FileTransform((stream, file) => {\n      if (path.sep === '\\\\') {\n        file.path = file.path.replace(/\\//g, path.sep);\n      }\n      stream.push(file);\n    });\n    await setupTest(\n        {\n          root: path.resolve('test-fixtures/bundle-project'),\n          entrypoint: 'index.html',\n        },\n        {},\n        platformSepPaths);\n\n    const bundledHtml = getFileOrDie('index.html');\n\n    // In setupTest, we use a transform stream that forces the file paths to\n    // be in the original platform form (this only changes/matters for win32)\n    // and it verifies that bundler can process files that may be merged in\n    // or have otherwise reverted form paths in win32 separator form.\n    assert.include(bundledHtml, '<title>Sample Build</title>', 'index.html');\n    assert.include(\n        bundledHtml, '<dom-module id=\"my-element\">', 'simple-import.html');\n    assert.include(\n        bundledHtml, '<dom-module id=\"my-element-2\">', 'simple-import-2.html');\n    assert.include(bundledHtml, '.simply-red', 'simple-style.css');\n  });\n\n  test('bundler deals with posix platform separators on win32', async () => {\n    const posixSepPaths = new FileTransform((stream, file) => {\n      if (path.sep === '\\\\') {\n        file.path = file.path.replace(/\\\\/g, '/');\n      }\n      stream.push(file);\n    });\n    await setupTest(\n        {\n          root: path.resolve('test-fixtures/bundle-project'),\n          entrypoint: 'index.html'\n        },\n        {},\n        posixSepPaths);\n\n    const bundledHtml = getFileOrDie('index.html');\n\n    // In setupTest, we use a transform stream that forces the file paths to\n    // be in the posix form (this only changes/matters for win32)\n    // and it verifies that bundler can process files that may be merged in\n    // or have otherwise have paths in posix separator form.\n    assert.include(bundledHtml, '<title>Sample Build</title>', 'index.html');\n    assert.include(\n        bundledHtml, '<dom-module id=\"my-element\">', 'simple-import.html');\n    assert.include(\n        bundledHtml, '<dom-module id=\"my-element-2\">', 'simple-import-2.html');\n    assert.include(bundledHtml, '.simply-red', 'simple-style.css');\n  });\n\n  test('bundler does not output inlined html imports', async () => {\n    await setupTest({root: defaultRoot, entrypoint: 'entrypoint-only.html'});\n    // We should have an entrypoint-only.html file (bundled).\n    assert.isOk(getFile('entrypoint-only.html'));\n    // We should not have the inlined file in the output.\n    assert.isNotOk(getFile('framework.html'));\n  });\n\n  test('bundler outputs html imports that are not inlined', async () => {\n    await setupTest(\n        {root: defaultRoot, entrypoint: 'entrypoint-only.html'},\n        {excludes: resolveUrls(defaultRoot, ['framework.html'])});\n    // We should have an entrypoint-only.html file (bundled).\n    assert.isOk(getFile('entrypoint-only.html'));\n    // We should have the html import that was excluded from inlining.\n    assert.isOk(getFile('framework.html'));\n  });\n\n  test('bundler does not output inlined scripts or styles', async () => {\n    await setupTest({\n      root: path.resolve('test-fixtures/bundle-project'),\n      entrypoint: 'index.html',\n    });\n    assert.deepEqual(\n        [...files.keys()].sort(),\n        [path.resolve('test-fixtures/bundle-project/index.html')]);\n  });\n\n  test('bundler does output scripts and styles not inlined', async () => {\n    await setupTest(\n        {\n          root: path.resolve('test-fixtures/bundle-project'),\n          entrypoint: 'index.html',\n        },\n        {\n          inlineCss: false,\n          inlineScripts: false,\n        });\n    assert.deepEqual([...files.keys()].sort(), [\n      'test-fixtures/bundle-project/index.html',\n      'test-fixtures/bundle-project/simple-script.js',\n      'test-fixtures/bundle-project/simple-style.css'\n    ].map((p) => path.resolve(p)));\n  });\n\n  suite('options', () => {\n    const projectOptions = {\n      root: 'test-fixtures/test-project',\n      entrypoint: 'index.html',\n      fragments: ['shell.html'],\n      componentDir: 'bower_components',\n    };\n\n    test('excludes: html file urls listed are not inlined', async () => {\n      await setupTest(projectOptions, {\n        excludes: resolveUrls(\n            projectOptions.root,\n            ['bower_components/loads-external-dependencies.html']),\n      });\n      assert.isOk(\n          getFile('bower_components/loads-external-dependencies.html'),\n          'Excluded import is passed through the bundler');\n      assert.include(\n          getFileOrDie('shell.html'),\n          '<link rel=\"import\" href=\"bower_components/loads-external-dependencies.html\">');\n    });\n\n    test('excludes: html files in folders listed are not inlined', async () => {\n      await setupTest(\n          projectOptions,\n          {excludes: resolveUrls(projectOptions.root, ['bower_components/'])});\n      assert.include(\n          getFileOrDie('shell.html'),\n          '<link rel=\"import\" href=\"bower_components/dep.html\">');\n    });\n\n    test('excludes: nothing is excluded when no excludes are given', async () => {\n      await setupTest(projectOptions, {excludes: []});\n      assert.isNotOk(\n          getFile('bower_components/loads-external-dependencies.html'),\n          'Inlined imports are not passed through the bundler');\n      assert.notInclude(\n          getFileOrDie('shell.html'),\n          '<link rel=\"import\" href=\"bower_components/loads-external-dependencies.html\">');\n      assert.include(\n          getFileOrDie('shell.html'),\n          '<script src=\"https://www.example.com/script.js\">',\n          'Inlined import content');\n    });\n\n    test('inlineCss: false, does not inline external stylesheets', async () => {\n      await setupTest(projectOptions, {inlineCss: false});\n      assert.notInclude(getFileOrDie('shell.html'), '.test-project-style');\n    });\n\n    test('inlineCss: true, inlines external stylesheets', async () => {\n      await setupTest(projectOptions, {inlineCss: true});\n      assert.include(getFileOrDie('shell.html'), '.test-project-style');\n    });\n\n    test('inlineScripts: false, does not inline external scripts', async () => {\n      await setupTest(projectOptions, {inlineScripts: false});\n      assert.notInclude(getFileOrDie('shell.html'), 'console.log(\\'shell\\')');\n    });\n\n    test('inlineScripts: true, inlines external scripts', async () => {\n      await setupTest(projectOptions, {inlineScripts: true});\n      assert.include(getFileOrDie('shell.html'), 'console.log(\\'shell\\')');\n    });\n\n    test('rewriteUrlsInTemplates: false, does not rewrite urls', async () => {\n      await setupTest(projectOptions, {rewriteUrlsInTemplates: false});\n      assert.include(getFileOrDie('shell.html'), 'url(\\'dep-bg.png\\')');\n    });\n\n    test('rewriteUrlsInTemplates: true, rewrites relative urls', async () => {\n      await setupTest(projectOptions, {rewriteUrlsInTemplates: true});\n      assert.include(\n          getFileOrDie('shell.html'), 'url(\"bower_components/dep-bg.png\")');\n    });\n\n    test('stripComments: false, does not strip html comments', async () => {\n      await setupTest(projectOptions, {stripComments: false});\n      assert.include(\n          getFileOrDie('shell.html'),\n          '<!-- remote dependencies should be ignored during build -->');\n    });\n\n    test('stripComments: true, strips html comments', async () => {\n      await setupTest(projectOptions, {stripComments: true});\n      assert.notInclude(\n          getFileOrDie('shell.html'),\n          '<!-- remote dependencies should be ignored during build -->');\n    });\n\n    test('strategy: fn(), applies bundle strategy function', async () => {\n      await setupTest(projectOptions, {\n        // Custom strategy creates a separate bundle for everything in the\n        // `bower_components` folder.\n        strategy: (bundles) => {\n          const bowerBundle = new Bundle('html-fragment');\n          bundles.forEach((bundle) => {\n            bundle.files.forEach((file) => {\n              if (file.includes('bower_components')) {\n                bowerBundle.files.add(file);\n                bundle.files.delete(file);\n              }\n            });\n          });\n          return bundles.concat(bowerBundle);\n        }\n      });\n      assert.isOk(getFile('shared_bundle_1.html'));\n      assert.include(\n          getFileOrDie('shared_bundle_1.html'),\n          '<dom-module id=\"dep\" assetpath=\"bower_components/\"');\n    });\n\n    test('urlMapper: fn(), applies bundle url mapper function', async () => {\n      const urlResolver = new FsUrlResolver(projectOptions.root);\n      await setupTest(projectOptions, {\n        urlMapper: (bundles: Bundle[]) => {\n          const map = new Map<ResolvedUrl, Bundle>();\n          for (const bundle of bundles) {\n            map.set(\n                urlResolver.resolve(\n                    `bundled/${\n                            [...bundle.entrypoints]\n                                .map((u) => urlResolver.relative(u))\n                                .join()}` as PackageRelativeUrl)!,\n                bundle);\n          }\n          return map;\n        }\n      });\n      assert.isOk(getFile('bundled/shell.html'));\n    });\n  });\n});\n"]}