{"version":3,"sources":["../src/test/push-manifest_test.ts"],"names":[],"mappings":"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","file":"push-manifest_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {assert} from 'chai';\nimport * as path from 'path';\nimport {PackageRelativeUrl} from 'polymer-analyzer';\nimport * as vfs from 'vinyl-fs';\n\nimport File = require('vinyl');\n\nimport {PolymerProject} from '../polymer-project';\nimport {PushManifest} from '../push-manifest';\nimport {LocalFsPath} from '../path-transformers';\nimport {AsyncTransformStream} from '../streams';\n\n/**\n * A utility stream to check all files that pass through it for a file that\n * matches the given push manifest file path. For that file, the stream asserts\n * that it matches the expected push manifest contents. It will emit\n * \"match-success\" & \"match-failure\" events for each test to listen to.\n */\nclass CheckPushManifest extends AsyncTransformStream<File, File> {\n  filePath: string;\n  expectedManifest: PushManifest;\n\n  constructor(filePath: LocalFsPath, expectedManifest: PushManifest) {\n    super({objectMode: true});\n    this.filePath = filePath;\n    this.expectedManifest = expectedManifest;\n  }\n\n  protected async *\n      _transformIter(files: AsyncIterable<File>): AsyncIterable<File> {\n    let didAssert = false;\n    for await (const file of files) {\n      if (this.filePath !== file.path) {\n        yield file;\n        continue;\n      }\n      try {\n        const pushManifestContents = file.contents!.toString();\n        const pushManifestJson = JSON.parse(pushManifestContents);\n        assert.deepEqual(pushManifestJson, this.expectedManifest);\n        this.emit('match-success');\n      } catch (err) {\n        this.emit('match-failure', err);\n      }\n\n      didAssert = true;\n      yield file;\n    }\n    if (!didAssert) {\n      throw new Error(`never saw file ${this.filePath}`);\n    }\n  }\n}\n\n/**\n * Utility function to set up the boilerplate for testing the\n * project.addPushManifest() transform stream.\n */\nfunction testPushManifest(\n    project: PolymerProject,\n    manifestRelativePath: LocalFsPath|undefined,\n    prefix: PackageRelativeUrl|undefined,\n    expectedManifest: PushManifest,\n    done: (err?: Error) => void): void {\n  const expectedManifestAbsolutePath =\n      path.join(\n          project.config.root, manifestRelativePath || 'push-manifest.json') as\n      LocalFsPath;\n  const pushManifestChecker =\n      new CheckPushManifest(expectedManifestAbsolutePath, expectedManifest);\n\n  vfs.src(path.join(project.config.root, '**'))\n      .on('error', done)\n      .pipe(project.addPushManifest(manifestRelativePath, prefix))\n      .on('error', done)\n      .pipe(pushManifestChecker)\n      .on('data', () => {/* noop: needed to start data flow */})\n      .on('match-success', done)\n      .on('match-failure', done)\n      .on('error', done);\n}\n\nsuite('AddPushManifest', () => {\n  const testProjectRoot = path.resolve('test-fixtures/push-manifest-data');\n\n  test('with entrypoint-only config options', (done) => {\n    const project = new PolymerProject({\n      root: testProjectRoot,\n      entrypoint: 'entrypoint-only.html',\n    });\n    const expectedPushManifest: PushManifest = {\n      'entrypoint-only.html': {\n        'framework.html': {\n          type: 'document',\n          weight: 1,\n        },\n      },\n    };\n\n    testPushManifest(project, undefined, undefined, expectedPushManifest, done);\n  });\n\n  test('with entrypoint and fragments config options', (done) => {\n    const project = new PolymerProject({\n      root: testProjectRoot,\n      entrypoint: 'entrypoint-only.html',\n      fragments: ['entrypoint-b.html', 'entrypoint-c.html'],\n      sources: [\n        'framework.html',\n        'shell.html',\n        'entrypoint-a.html',\n        'entrypoint-b.html',\n        'entrypoint-c.html',\n        'common-dependency.html',\n      ],\n    });\n    const expectedPushManifest: PushManifest = {\n      'entrypoint-only.html': {\n        'framework.html': {\n          type: 'document',\n          weight: 1,\n        },\n      },\n      'common-dependency.html': {\n        'example-script.js': {\n          'type': 'script',\n          'weight': 1,\n        },\n        'example-style.css': {\n          'type': 'style',\n          'weight': 1,\n        }\n      },\n      'entrypoint-b.html': {\n        'common-dependency.html': {\n          type: 'document',\n          weight: 1,\n        },\n        'example-script.js': {\n          type: 'script',\n          weight: 1,\n        },\n        'example-style.css': {\n          type: 'style',\n          weight: 1,\n        },\n      },\n      'entrypoint-c.html': {},\n    };\n\n    testPushManifest(project, undefined, undefined, expectedPushManifest, done);\n  });\n\n  test('with full app-shell config options', (done) => {\n    const project = new PolymerProject({\n      root: testProjectRoot,\n      entrypoint: 'entrypoint-a.html',\n      shell: 'shell.html',\n      fragments: ['entrypoint-b.html', 'entrypoint-c.html'],\n      sources: [\n        'framework.html',\n        'shell.html',\n        'entrypoint-a.html',\n        'entrypoint-b.html',\n        'entrypoint-c.html',\n        'common-dependency.html',\n      ],\n    });\n    const expectedPushManifest: PushManifest = {\n      'shell.html': {\n        'framework.html': {\n          type: 'document',\n          weight: 1,\n        }\n      },\n      'common-dependency.html': {\n        'example-script.js': {\n          'type': 'script',\n          'weight': 1,\n        },\n        'example-style.css': {\n          'type': 'style',\n          'weight': 1,\n        }\n      },\n      'entrypoint-b.html': {\n        'common-dependency.html': {\n          type: 'document',\n          weight: 1,\n        },\n        'example-script.js': {\n          type: 'script',\n          weight: 1,\n        },\n        'example-style.css': {\n          type: 'style',\n          weight: 1,\n        },\n      },\n      'entrypoint-c.html': {}\n    };\n\n    testPushManifest(project, undefined, undefined, expectedPushManifest, done);\n  });\n\n\n  test('with custom file path', (done) => {\n    const project = new PolymerProject({\n      root: testProjectRoot,\n      entrypoint: 'entrypoint-a.html',\n      shell: 'shell.html',\n      fragments: ['entrypoint-b.html', 'entrypoint-c.html'],\n      sources: [\n        'framework.html',\n        'shell.html',\n        'entrypoint-a.html',\n        'entrypoint-b.html',\n        'entrypoint-c.html',\n        'common-dependency.html',\n      ],\n    });\n    const pushManifestRelativePath =\n        'custom/push-manifest/path.json' as LocalFsPath;\n    const expectedPushManifest: PushManifest = {\n      'shell.html': {\n        'framework.html': {\n          type: 'document',\n          weight: 1,\n        }\n      },\n      'common-dependency.html': {\n        'example-script.js': {\n          'type': 'script',\n          'weight': 1,\n        },\n        'example-style.css': {\n          'type': 'style',\n          'weight': 1,\n        }\n      },\n      'entrypoint-b.html': {\n        'common-dependency.html': {\n          type: 'document',\n          weight: 1,\n        },\n        'example-script.js': {\n          type: 'script',\n          weight: 1,\n        },\n        'example-style.css': {\n          type: 'style',\n          weight: 1,\n        },\n      },\n      'entrypoint-c.html': {}\n    };\n\n    testPushManifest(\n        project,\n        pushManifestRelativePath,\n        undefined,\n        expectedPushManifest,\n        done);\n  });\n\n  test('with prefix', (done) => {\n    const project = new PolymerProject({\n      root: testProjectRoot,\n      entrypoint: 'entrypoint-a.html',\n      shell: 'shell.html',\n      fragments: ['entrypoint-b.html'],\n      sources: [\n        'framework.html',\n        'common-dependency.html',\n      ],\n    });\n    const expectedPushManifest: PushManifest = {\n      'foo/shell.html': {\n        'foo/framework.html': {\n          type: 'document',\n          weight: 1,\n        }\n      },\n      'foo/entrypoint-b.html': {\n        'foo/common-dependency.html': {\n          type: 'document',\n          weight: 1,\n        },\n        'foo/example-script.js': {\n          type: 'script',\n          weight: 1,\n        },\n        'foo/example-style.css': {\n          type: 'style',\n          weight: 1,\n        },\n      },\n    };\n\n    testPushManifest(\n        project,\n        undefined,\n        '/foo/' as PackageRelativeUrl,\n        expectedPushManifest,\n        done);\n  });\n});\n"]}