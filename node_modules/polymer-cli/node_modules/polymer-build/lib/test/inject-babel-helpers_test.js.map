{"version":3,"sources":["../src/test/inject-babel-helpers_test.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;AAEH,+BAA4B;AAE5B,6BAA6B;AAE7B,wDAAkD;AAElD,MAAM,eAAe,GACjB,IAAI,CAAC,OAAO,CAAC,2CAA2C,CAAC,CAAC;AAE9D,KAAK,CAAC,wBAAwB,EAAE,GAAG,EAAE;IACnC,IAAI,cAA8B,CAAC;IAEnC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IAExE,KAAK,CAAC,GAAG,EAAE;QACT,cAAc,GAAG,IAAI,gCAAc,CAAC;YAClC,IAAI,EAAE,4CAA4C;YAClD,UAAU,EAAE,YAAY;YACxB,KAAK,EAAE,YAAY;YACnB,OAAO,EAAE;gBACP,eAAe;aAChB;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,kDAAkD,EAAE,CAAC,IAAI,EAAE,EAAE;QAChE,MAAM,2BAA2B,GAAG,yBAAyB,CAAC;QAC9D,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;QACxB,cAAc,CAAC,OAAO,EAAE;aACnB,IAAI,CAAC,cAAc,CAAC,2BAA2B,EAAE,CAAC;aAClD,EAAE,CAAC,MAAM,EAAE,CAAC,CAAO,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;aACrD,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,GAAyB,CAAC,CAAC;aAC3C,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;YACd,MAAM,aAAa,GAAG;gBACpB,YAAY;gBACZ,YAAY;aACb,CAAC;YACF,aAAM,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,aAAa,CAAC,CAAC;YACjE,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YAC1D,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YAC1D,aAAM,CAAC,OAAO,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;YACvC,aAAM,CACF,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC;gBAC1B,KAAK,CAAC,OAAO,CAAC,2BAA2B,CAAC,EAC9C,6DAA6D,CAAC,CAAC;YACnE,aAAM,CAAC,UAAU,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;YAC1C,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"inject-babel-helpers_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {assert} from 'chai';\nimport File = require('vinyl');\nimport * as path from 'path';\n\nimport {PolymerProject} from '../polymer-project';\n\nconst testProjectRoot =\n    path.resolve('test-fixtures/custom-elements-es5-adapter');\n\nsuite('Babel Helpers Injecter', () => {\n  let defaultProject: PolymerProject;\n\n  const unroot = ((p: string) => p.substring(testProjectRoot.length + 1));\n\n  setup(() => {\n    defaultProject = new PolymerProject({\n      root: 'test-fixtures/custom-elements-es5-adapter/',\n      entrypoint: 'index.html',\n      shell: 'shell.html',\n      sources: [\n        'source-dir/**',\n      ],\n    });\n  });\n\n  test('injects babel helpers inline into the entrypoint', (done) => {\n    const webcomponentsLoaderFilename = 'webcomponents-loader.js';\n    const files = new Map();\n    defaultProject.sources()\n        .pipe(defaultProject.addBabelHelpersInEntrypoint())\n        .on('data', (f: File) => files.set(unroot(f.path), f))\n        .on('data', () => {/* starts the stream */})\n        .on('end', () => {\n          const expectedFiles = [\n            'index.html',\n            'shell.html',\n          ];\n          assert.deepEqual(Array.from(files.keys()).sort(), expectedFiles);\n          const index = files.get('index.html').contents.toString();\n          const shell = files.get('shell.html').contents.toString();\n          assert.include(index, 'babelHelpers=');\n          assert(\n              index.indexOf('babelHelpers=') <\n                  index.indexOf(webcomponentsLoaderFilename),\n              'babel helpers should come before all other executable code.');\n          assert.notInclude(shell, 'babelHelpers=');\n          done();\n        });\n  });\n});\n"]}