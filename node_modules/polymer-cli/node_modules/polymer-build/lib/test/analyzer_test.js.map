{"version":3,"sources":["../src/test/analyzer_test.ts"],"names":[],"mappings":"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","file":"analyzer_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {assert} from 'chai';\nimport * as path from 'path';\nimport File = require('vinyl');\nimport {ProjectConfig} from 'polymer-project-config';\nimport * as sinon from 'sinon';\nimport {Writable} from 'stream';\n\nimport {getFlowingState} from './util';\nimport {BuildAnalyzer} from '../analyzer';\nimport {waitFor, waitForAll} from '../streams';\nimport {PackageRelativeUrl} from 'polymer-analyzer';\n\n/**\n * Streams will remain paused unless something is listening for it's data.\n * NoopStream is useful for piping to if you just want the stream to run and end\n * successfully without checking the data passed through it.\n */\nclass NoopStream extends Writable {\n  constructor() {\n    super({objectMode: true});\n  }\n  _write(_chunk: {}, _encoding?: string, callback?: Function): void {\n    callback!();\n  }\n}\n\nsuite('Analyzer', () => {\n  suite('DepsIndex', () => {\n    test('fragment to deps list has only uniques', () => {\n      const config = new ProjectConfig({\n        root: `test-fixtures/analyzer-data`,\n        entrypoint: 'entrypoint.html',\n        fragments: [\n          'a.html',\n          'b.html',\n        ],\n        sources: ['a.html', 'b.html', 'entrypoint.html'],\n      });\n\n      const analyzer = new BuildAnalyzer(config, null);\n      analyzer.sources().pipe(new NoopStream());\n      analyzer.dependencies().pipe(new NoopStream());\n\n      return waitForAll([analyzer.sources(), analyzer.dependencies()])\n          .then(() => {\n            return analyzer.analyzeDependencies;\n          })\n          .then((depsIndex) => {\n            const ftd = depsIndex.fragmentToDeps;\n            for (const frag of ftd.keys()) {\n              assert.deepEqual(\n                  ftd.get(frag),\n                  ['shared-1.html', 'shared-2.html'].map(\n                      (u) => u as PackageRelativeUrl));\n            }\n          });\n    });\n\n    test('analyzing shell and entrypoint doesn\\'t double load files', () => {\n      const root = `test-fixtures/analyzer-data`;\n      const sourceFiles =\n          ['shell.html', 'entrypoint.html'].map((p) => path.resolve(root, p));\n      const config = new ProjectConfig({\n        root: root,\n        entrypoint: 'entrypoint.html',\n        shell: 'shell.html',\n        sources: sourceFiles,\n      });\n\n      const analyzer = new BuildAnalyzer(config, null);\n      analyzer.sources().pipe(new NoopStream());\n      analyzer.dependencies().pipe(new NoopStream());\n\n      return waitForAll([analyzer.sources(), analyzer.dependencies()])\n          .then(() => {\n            return analyzer.analyzeDependencies;\n          })\n          .then((depsIndex) => {\n            assert.isTrue(depsIndex.depsToFragments.has(\n                'shared-2.html' as PackageRelativeUrl));\n            assert.isFalse(depsIndex.depsToFragments.has(\n                'shell.html' as PackageRelativeUrl));\n            assert.isFalse(depsIndex.depsToFragments.has(\n                'shared-banana.html' as PackageRelativeUrl));\n          });\n    });\n  });\n\n  suite('.dependencies', () => {\n    test('outputs all dependencies needed by source', () => {\n      const foundDependencies = new Set();\n      const root = `test-fixtures/analyzer-data`;\n      const sourceFiles =\n          ['shell.html', 'entrypoint.html'].map((p) => path.resolve(root, p));\n      const config = new ProjectConfig({\n        root: root,\n        entrypoint: 'entrypoint.html',\n        shell: 'shell.html',\n        sources: sourceFiles,\n      });\n\n      const analyzer = new BuildAnalyzer(config, null);\n      analyzer.sources().pipe(new NoopStream());\n      analyzer.dependencies().on('data', (file: File) => {\n        foundDependencies.add(file.path);\n      });\n\n      return waitForAll([analyzer.sources(), analyzer.dependencies()])\n          .then(() => {\n            // shared-1 is never imported by shell/entrypoint, so it is not\n            // included as a dep.\n            assert.isFalse(\n                foundDependencies.has(path.resolve(root, 'shared-1.html')));\n            // shared-2 is imported by shell, so it is included as a dep.\n            assert.isTrue(\n                foundDependencies.has(path.resolve(root, 'shared-2.html')));\n          });\n    });\n\n    test(\n        'outputs all dependencies needed by source and given fragments', () => {\n          const foundDependencies = new Set();\n          const root = `test-fixtures/analyzer-data`;\n          const sourceFiles =\n              ['a.html', 'b.html', 'shell.html', 'entrypoint.html'].map(\n                  (p) => path.resolve(root, p));\n          const config = new ProjectConfig({\n            root: root,\n            entrypoint: 'entrypoint.html',\n            shell: 'shell.html',\n            fragments: [\n              'a.html',\n              'b.html',\n            ],\n            sources: sourceFiles,\n          });\n          const analyzer = new BuildAnalyzer(config, null);\n          analyzer.sources().pipe(new NoopStream());\n          analyzer.dependencies().on('data', (file: File) => {\n            foundDependencies.add(file.path);\n          });\n\n          return waitForAll([analyzer.sources(), analyzer.dependencies()])\n              .then(() => {\n                // shared-1 is imported by 'a' & 'b', so it is included as a\n                // dep.\n                assert.isTrue(\n                    foundDependencies.has(path.resolve(root, 'shared-1.html')));\n                // shared-1 is imported by 'a' & 'b', so it is included as a\n                // dep.\n                assert.isTrue(\n                    foundDependencies.has(path.resolve(root, 'shared-2.html')));\n              });\n        });\n  });\n\n  test(\n      'propagates an error when a dependency filepath is analyzed but cannot be found',\n      (done) => {\n        const root = `test-fixtures/bad-src-import`;\n        const config = new ProjectConfig({\n          root: root,\n          entrypoint: 'index.html',\n          sources: ['src/**/*'],\n        });\n        const analyzer = new BuildAnalyzer(config, null);\n\n        let errorCounter = 0;\n        const errorListener = (err: Error) => {\n          assert.equal(err.message, '3 error(s) occurred during build.');\n          errorCounter++;\n          if (errorCounter >= 2) {\n            done();\n          }\n        };\n        analyzer.sources().pipe(new NoopStream());\n        analyzer.sources().on('error', errorListener);\n        analyzer.dependencies().pipe(new NoopStream());\n        analyzer.dependencies().on('error', errorListener);\n      });\n\n  test(\n      'propagates an error when a source filepath is analyzed but cannot be found',\n      (done) => {\n        const root = `test-fixtures/bad-dependency-import`;\n        const config = new ProjectConfig({\n          root: root,\n          entrypoint: 'index.html',\n          sources: ['src/**/*'],\n        });\n        const analyzer = new BuildAnalyzer(config, null);\n\n        analyzer.dependencies().pipe(new NoopStream());\n        analyzer.dependencies().on('error', (err: Error) => {\n          assert.match(\n              err.message,\n              /ENOENT\\: no such file or directory.*does\\-not\\-exist\\-in\\-dependencies\\.html/);\n          done();\n        });\n      });\n\n  test(\n      'both file streams will emit a analysis warning of type \"error\"',\n      (done) => {\n        const root = path.resolve('test-fixtures/project-analysis-error');\n        const sourceFiles = path.join(root, '**');\n        const config = new ProjectConfig({\n          root: root,\n          sources: [sourceFiles],\n        });\n        const analyzer = new BuildAnalyzer(config, null);\n\n        let errorCounter = 0;\n        const errorListener = (err: Error) => {\n          assert.equal(err.message, '1 error(s) occurred during build.');\n          errorCounter++;\n          if (errorCounter >= 2) {\n            done();\n          }\n        };\n\n        analyzer.sources().pipe(new NoopStream());\n        analyzer.sources().on('error', errorListener);\n        analyzer.dependencies().pipe(new NoopStream());\n        analyzer.dependencies().on('error', errorListener);\n      });\n\n  test(\n      'the analyzer stream will log all analysis warnings at the end of the stream',\n      () => {\n        const root = path.resolve('test-fixtures/project-analysis-error');\n        const sourceFiles = path.join(root, '**');\n        const config = new ProjectConfig({\n          root: root,\n          sources: [sourceFiles],\n        });\n\n        let prematurePrintWarnings = false;\n        const prematurePrintWarningsCheck = () => prematurePrintWarnings =\n            prematurePrintWarnings ||\n            analyzer.allFragmentsToAnalyze.size > 0 && printWarningsSpy.called;\n        const analyzer = new BuildAnalyzer(config, null);\n        const printWarningsSpy = sinon.spy(analyzer, 'printWarnings');\n\n        analyzer.sources().on('data', prematurePrintWarningsCheck);\n        analyzer.dependencies().on('data', prematurePrintWarningsCheck);\n\n        return waitForAll([analyzer.sources(), analyzer.dependencies()])\n            .then(\n                () => {\n                  throw new Error('Parse error expected!');\n                },\n                (_err: Error) => {\n                  assert.isFalse(prematurePrintWarnings);\n                  assert.isTrue(printWarningsSpy.calledOnce);\n                });\n      });\n\n  test('analyzer filters warnings', () => {\n    const root = path.resolve('test-fixtures/project-analysis-warning');\n    const sources = [path.join(root, '**')];\n\n    const config = new ProjectConfig({\n      root,\n      sources,\n      lint: {\n        rules: ['polymer-2'],\n        ignoreWarnings: ['invalid-polymer-expression']\n      }\n    });\n\n    const analyzer = new BuildAnalyzer(config, null);\n    analyzer.sources().pipe(new NoopStream());\n\n    return waitFor(analyzer.sources()).then(() => {\n      assert.isTrue(analyzer.warnings.size === 0);\n    });\n  });\n\n  test('calling sources() starts analysis', async () => {\n    const config = new ProjectConfig({\n      root: `test-fixtures/analyzer-data`,\n      entrypoint: 'entrypoint.html',\n      fragments: [\n        'a.html',\n        'b.html',\n      ],\n      sources: ['a.html', 'b.html', 'entrypoint.html'],\n    });\n\n    const analyzer = new BuildAnalyzer(config, null);\n    assert.isFalse(analyzer.started);\n    analyzer.sources().pipe(new NoopStream());\n    assert.isTrue(analyzer.started);\n  });\n\n\n  test('calling dependencies() starts analysis', () => {\n    const config = new ProjectConfig({\n      root: `test-fixtures/analyzer-data`,\n      entrypoint: 'entrypoint.html',\n      fragments: [\n        'a.html',\n        'b.html',\n      ],\n      sources: ['a.html', 'b.html', 'entrypoint.html'],\n    });\n\n    const analyzer = new BuildAnalyzer(config, null);\n    assert.isFalse(analyzer.started);\n    analyzer.dependencies().pipe(new NoopStream());\n    assert.isTrue(analyzer.started);\n  });\n\n  test('the source/dependency streams remain paused until use', () => {\n    const config = new ProjectConfig({\n      root: `test-fixtures/analyzer-data`,\n      entrypoint: 'entrypoint.html',\n      fragments: [\n        'a.html',\n        'b.html',\n      ],\n      sources: ['a.html', 'b.html', 'entrypoint.html'],\n    });\n    const analyzer = new BuildAnalyzer(config, null);\n\n    // Cast analyzer to <any> so that we can check private properties of it.\n    // We need to access these private streams directly because the public\n    // `sources()` and `dependencies()` functions have intentional side effects\n    // related to these streams that we are trying to test here.\n    // tslint:disable-next-line: no-any\n    const analyzerWithPrivates: any = analyzer;\n    assert.isUndefined(analyzerWithPrivates._sourcesStream);\n    assert.isUndefined(analyzerWithPrivates._dependenciesStream);\n    analyzerWithPrivates.sources();\n    assert.isDefined(analyzerWithPrivates._sourcesStream);\n    assert.isDefined(analyzerWithPrivates._dependenciesStream);\n    assert.isTrue(getFlowingState(analyzerWithPrivates._sourcesStream));\n    assert.isTrue(getFlowingState(analyzerWithPrivates._dependenciesStream));\n\n    // Check that even though `sources()` has been called, the public file\n    // streams aren't flowing until data listeners are attached (directly or via\n    // piping) so that files are never lost).\n    assert.isNull(getFlowingState(analyzer.sources()));\n    assert.isNull(getFlowingState(analyzer.dependencies()));\n    analyzer.sources().on('data', () => {});\n    assert.isTrue(getFlowingState(analyzer.sources()));\n    assert.isNull(getFlowingState(analyzer.dependencies()));\n    analyzer.dependencies().pipe(new NoopStream());\n    assert.isTrue(getFlowingState(analyzer.sources()));\n    assert.isTrue(getFlowingState(analyzer.dependencies()));\n  });\n\n  // TODO(fks) 10-26-2016: Refactor logging to be testable, and configurable by\n  // the consumer.\n  suite.skip('.printWarnings()', () => {});\n});\n"]}