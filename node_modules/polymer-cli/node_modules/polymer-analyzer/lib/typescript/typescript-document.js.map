{"version":3,"sources":["../src/typescript/typescript-document.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;AAEH,iCAAiC;AAIjC,iDAAoE;AAMpE,2DAA6C;AAArC,uCAAA,OAAO,CAAA;AAEf,8BAAsC,SAAQ,yBAA6B;IAA3E;;QACW,SAAI,GAAG,YAAY,CAAC;IAkB/B,CAAC;IAhBC,KAAK,CAAC,QAAmB;QACvB,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC;QAC5B,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;YAC9B,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;SAChE;IACH,CAAC;IAES,mBAAmB,CAAC,KAAW;QACvC,iCAAiC;QACjC,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;IACjC,CAAC;IAED,SAAS,CAAC,QAA0B;QAClC,iCAAiC;QACjC,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;IACjC,CAAC;CACF;AAnBD,4DAmBC","file":"typescript-document.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as ts from 'typescript';\nimport {Node} from 'typescript';\n\nimport {SourceRange} from '../model/model';\nimport {ParsedDocument, StringifyOptions} from '../parser/document';\n\nimport {Visitor} from './typescript-visitor';\n\nexport {Node, Program} from 'typescript';\nexport {Options} from '../parser/document';\nexport {Visitor} from './typescript-visitor';\n\nexport class ParsedTypeScriptDocument extends ParsedDocument<Node, Visitor> {\n  readonly type = 'typescript';\n\n  visit(visitors: Visitor[]) {\n    const sourceFile = this.ast;\n    for (const visitor of visitors) {\n      ts.forEachChild(sourceFile, (node) => visitor.visitNode(node));\n    }\n  }\n\n  protected _sourceRangeForNode(_node: Node): SourceRange|undefined {\n    // TODO(justinfagnani): implement\n    throw new Error('unsupported');\n  }\n\n  stringify(_options: StringifyOptions): string {\n    // TODO(justinfagnani): implement\n    throw new Error('unsupported');\n  }\n}\n"]}