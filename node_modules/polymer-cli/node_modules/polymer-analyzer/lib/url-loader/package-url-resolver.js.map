{"version":3,"sources":["../src/url-loader/package-url-resolver.ts"],"names":[],"mappings":"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","file":"package-url-resolver.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as pathlib from 'path';\nimport {posix as posix} from 'path';\nimport pathIsInside = require('path-is-inside');\nimport {format as urlLibFormat} from 'url';\n\nimport {parseUrl} from '../core/utils';\nimport {FileRelativeUrl, PackageRelativeUrl} from '../index';\nimport {ResolvedUrl} from '../model/url';\n\nimport {FsUrlResolver} from './fs-url-resolver';\n\nexport interface PackageUrlResolverOptions {\n  packageDir?: string;\n  componentDir?: string;\n  // If provided, any URL which matches `host` will attempt to resolve\n  // to a `file` protocol URL regardless of the protocol represented in the\n  // URL to-be-resolved.\n  host?: string;\n  // When attempting to resolve a protocol-relative URL (that is a URL which\n  // begins `//`), the default protocol to resolve to if the resolver can\n  // not produce a `file` URL.\n  protocol?: string;\n}\n\n/**\n * Resolves a URL to a canonical URL within a package.\n */\nexport class PackageUrlResolver extends FsUrlResolver {\n  readonly componentDir: string;\n  private readonly resolvedComponentDir: string;\n\n  constructor(options: PackageUrlResolverOptions = {}) {\n    super(options.packageDir, options.host, options.protocol);\n    this.componentDir = options.componentDir || 'bower_components/';\n    this.resolvedComponentDir =\n        pathlib.join(this.packageDir, this.componentDir);\n  }\n\n  protected modifyFsPath(path: string) {\n    // If the path points to a sibling directory, resolve it to the\n    // component directory\n    const parentOfPackageDir = pathlib.dirname(this.packageDir);\n    if (pathIsInside(path, parentOfPackageDir) &&\n        !pathIsInside(path, this.packageDir)) {\n      path = pathlib.join(\n          this.packageDir,\n          this.componentDir,\n          path.substring(parentOfPackageDir.length));\n    }\n\n    return path;\n  }\n\n  relative(to: ResolvedUrl): PackageRelativeUrl;\n  relative(from: ResolvedUrl, to: ResolvedUrl, _kind?: string): FileRelativeUrl;\n  relative(fromOrTo: ResolvedUrl, maybeTo?: ResolvedUrl, _kind?: string):\n      FileRelativeUrl|PackageRelativeUrl {\n    const [from, to] = (maybeTo !== undefined) ? [fromOrTo, maybeTo] :\n                                                 [this.packageUrl, fromOrTo];\n    const result = this.relativeImpl(from, to);\n    if (maybeTo === undefined) {\n      return this.brandAsPackageRelative(result);\n    } else {\n      return result;\n    }\n  }\n\n  private relativeImpl(from: ResolvedUrl, to: ResolvedUrl): FileRelativeUrl {\n    const pathnameInComponentDir = this.pathnameForComponentDirUrl(to);\n    // If the URL we're going to is in the component directory, we need\n    // to correct for that when generating a relative URL...\n    if (pathnameInComponentDir !== undefined) {\n      // ... unless the URL we're coming from is *also* in the component\n      // directory\n      if (this.pathnameForComponentDirUrl(from) === undefined) {\n        // Ok, transform the path from looking like `/path/to/node_modules/foo`\n        // to look instead like `/path/foo` so we get a `../` relative url.\n        const componentDirPath =\n            pathnameInComponentDir.slice(this.resolvedComponentDir.length);\n        const reresolved = this.simpleUrlResolve(\n            this.packageUrl,\n            ('../' + componentDirPath) as FileRelativeUrl,\n            this.protocol);\n        if (reresolved !== undefined) {\n          const reresolvedUrl = parseUrl(reresolved);\n          const toUrl = parseUrl(to);\n          reresolvedUrl.search = toUrl.search;\n          reresolvedUrl.hash = toUrl.hash;\n          to = this.brandAsResolved(urlLibFormat(reresolvedUrl));\n        }\n      }\n    }\n\n    return super.relative(from, to);\n  }\n\n  /**\n   * If the given URL is a file url inside our dependencies (e.g.\n   * bower_components) then return a resolved posix path to its file.\n   * Otherwise return undefined.\n   */\n  private pathnameForComponentDirUrl(resolvedUrl: ResolvedUrl): string\n      |undefined {\n    const url = parseUrl(resolvedUrl);\n    if (this.shouldHandleAsFileUrl(url) && url.pathname) {\n      let pathname;\n      try {\n        pathname = posix.normalize(decodeURIComponent(url.pathname));\n      } catch {\n        return undefined;\n      }\n      const path = this.filesystemPathForPathname(pathname);\n      if (path && pathIsInside(path, this.resolvedComponentDir)) {\n        return path;\n      }\n    }\n    return undefined;\n  }\n}\n"]}