{"version":3,"sources":["../src/test/javascript/javascript-import-scanner_test.ts"],"names":[],"mappings":"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","file":"javascript-import-scanner_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\nimport {assert} from 'chai';\n\nimport {Analyzer} from '../../core/analyzer';\nimport {JavaScriptImportScanner} from '../../javascript/javascript-import-scanner';\nimport {createForDirectory, fixtureDir, runScanner} from '../test-utils';\n\nsuite('JavaScriptImportScanner', () => {\n  let analyzer: Analyzer;\n  suiteSetup(async () => {\n    ({analyzer} = await createForDirectory(fixtureDir));\n  });\n\n  test('finds imports', async () => {\n    const {features, warnings} = await runScanner(\n        analyzer, new JavaScriptImportScanner(), 'javascript/module.js');\n    assert.equal(warnings.length, 0);\n    assert.containSubset(features, [\n      {\n        type: 'js-import',\n        url: './submodule.js',\n        lazy: false,\n      },\n    ]);\n  });\n\n  test('finds dynamic imports', async () => {\n    const {features, warnings} = await runScanner(\n        analyzer,\n        new JavaScriptImportScanner({moduleResolution: 'node'}),\n        'javascript/dynamic-import.js');\n\n    assert.equal(warnings.length, 1);\n    assert.containSubset(warnings, [{code: 'non-literal-import'}]);\n    assert.containSubset(features, [\n      {\n        type: 'js-import',\n        url: './submodule.js',\n        lazy: true,\n        specifier: './submodule.js',\n      },\n      {\n        type: 'js-import',\n        url: './node_modules/test-package/index.js',\n        lazy: true,\n        specifier: 'test-package'\n      },\n    ]);\n  });\n\n  test('resolves bare specifiers', async () => {\n    const {features, warnings} = await runScanner(\n        analyzer,\n        new JavaScriptImportScanner({moduleResolution: 'node'}),\n        'javascript/module-with-named-import.js');\n\n    assert.equal(warnings.length, 0);\n    assert.containSubset(features, [\n      {\n        type: 'js-import',\n        url: './node_modules/test-package/index.js',\n        lazy: false,\n        specifier: 'test-package'\n      },\n      {\n        type: 'js-import',\n        url: './node_modules/test-package/index.js',\n        lazy: false,\n        specifier: 'test-package'\n      },\n    ]);\n  });\n\n  test('warns for non-resolvable bare specifiers', async () => {\n    const {features, warnings} = await runScanner(\n        analyzer,\n        new JavaScriptImportScanner({moduleResolution: 'node'}),\n        'javascript/module-with-not-found-named-import.js');\n\n    assert.equal(warnings.length, 1);\n    assert.containSubset(warnings, [{code: 'cant-resolve-module-specifier'}]);\n    assert.containSubset(features, [\n      {\n        type: 'js-import',\n        url: undefined,\n        lazy: false,\n      },\n    ]);\n  });\n\n  test('handles URL specifiers', async () => {\n    const {features, warnings} = await runScanner(\n        analyzer,\n        new JavaScriptImportScanner(),\n        'javascript/module-with-remote-import.js');\n\n    assert.equal(warnings.length, 0);\n    assert.containSubset(features, [\n      {\n        type: 'js-import',\n        url: 'https://unpkg.com/lit-html/lit-html.js',\n        lazy: false,\n      },\n    ]);\n  });\n\n  test('recognizes reexports as imports', async () => {\n    const {features, warnings} = await runScanner(\n        analyzer,\n        new JavaScriptImportScanner(),\n        'javascript/all-export-types.js');\n\n    assert.equal(warnings.length, 0);\n    assert.containSubset(features, [\n      {\n        type: 'js-import',\n        url: './module-with-export.js',\n        lazy: false,\n      },\n      {\n        type: 'js-import',\n        url: './module-with-export.js',\n        lazy: false,\n      },\n    ]);\n  });\n});\n"]}