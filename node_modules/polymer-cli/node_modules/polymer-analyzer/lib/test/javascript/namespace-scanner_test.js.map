{"version":3,"sources":["../src/test/javascript/namespace-scanner_test.ts"],"names":[],"mappings":"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","file":"namespace-scanner_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\nimport {assert} from 'chai';\nimport * as path from 'path';\n\nimport {Analyzer} from '../../core/analyzer';\nimport {ScannedNamespace} from '../../javascript/namespace';\nimport {NamespaceScanner} from '../../javascript/namespace-scanner';\nimport {CodeUnderliner, createForDirectory, fixtureDir, runScanner} from '../test-utils';\n\nsuite('NamespaceScanner', () => {\n  let analyzer: Analyzer;\n  let underliner: CodeUnderliner;\n\n  suiteSetup(async () => {\n    const testFilesDir = path.resolve(fixtureDir, 'namespaces/');\n    ({analyzer, underliner} = await createForDirectory(testFilesDir));\n  });\n\n  async function getNamespaces(filename: string) {\n    const {features} =\n        await runScanner(analyzer, new NamespaceScanner(), filename);\n    const scannedNamespaces = [];\n    for (const feature of features) {\n      if (feature instanceof ScannedNamespace) {\n        scannedNamespaces.push(feature);\n      }\n    }\n    return scannedNamespaces;\n  }\n\n  function getProperties(namespace: ScannedNamespace) {\n    return [...namespace.properties.values()].map((prop) => {\n      return {\n        name: prop.name,\n        description: prop.description,\n        privacy: prop.privacy,\n        readOnly: prop.readOnly,\n        type: prop.type,\n        warnings: prop.warnings\n      };\n    });\n  }\n\n  test('scans named namespaces', async () => {\n    const namespaces = await getNamespaces('namespace-named.js');\n    assert.equal(namespaces.length, 2);\n\n    assert.equal(namespaces[0].name, 'ExplicitlyNamedNamespace');\n    assert.equal(namespaces[0].description, '');\n    assert.deepEqual(namespaces[0].warnings, []);\n    assert.equal(namespaces[0].properties.size, 0);\n    assert.equal(await underliner.underline(namespaces[0].sourceRange), `\nvar ExplicitlyNamedNamespace = {};\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`);\n\n    assert.equal(\n        namespaces[1].name, 'ExplicitlyNamedNamespace.NestedNamespace');\n    assert.equal(namespaces[1].description, '');\n    assert.deepEqual(namespaces[1].warnings, []);\n    assert.deepEqual(getProperties(namespaces[1]), [{\n                       name: 'foo',\n                       description: undefined,\n                       privacy: 'public',\n                       readOnly: false,\n                       type: 'string',\n                       warnings: []\n                     }]);\n    assert.equal(await underliner.underline(namespaces[1].sourceRange), `\nExplicitlyNamedNamespace.NestedNamespace = {\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  foo: \\'bar\\'\n~~~~~~~~~~~~\n};\n~~`);\n  });\n\n  test('scans unnamed namespaces', async () => {\n    const namespaces = await getNamespaces('namespace-unnamed.js');\n    assert.equal(namespaces.length, 4);\n\n    assert.equal(namespaces[0].name, 'ImplicitlyNamedNamespace');\n    assert.equal(namespaces[0].description, 'A namespace description');\n    assert.equal(namespaces[0].summary, 'A namespace summary');\n    assert.deepEqual(namespaces[0].warnings, []);\n    assert.equal(await underliner.underline(namespaces[0].sourceRange), `\nvar ImplicitlyNamedNamespace = {};\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`);\n\n    assert.equal(\n        namespaces[1].name, 'ImplicitlyNamedNamespace.NestedNamespace');\n    assert.equal(namespaces[1].description, '');\n    assert.deepEqual(namespaces[1].warnings, []);\n    assert.equal(await underliner.underline(namespaces[1].sourceRange), `\nImplicitlyNamedNamespace.NestedNamespace = {\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  foo: \\'bar\\'\n~~~~~~~~~~~~\n};\n~~`);\n\n    assert.equal(namespaces[2].name, 'ParentNamespace.FooNamespace');\n    assert.equal(namespaces[2].description, '');\n    assert.deepEqual(namespaces[2].warnings, []);\n    assert.equal(await underliner.underline(namespaces[2].sourceRange), `\nFooNamespace = {\n~~~~~~~~~~~~~~~~\n  foo: \\'bar\\'\n~~~~~~~~~~~~\n};\n~~`);\n\n    assert.equal(namespaces[3].name, 'ParentNamespace.BarNamespace');\n    assert.equal(namespaces[3].description, '');\n    assert.deepEqual(namespaces[3].warnings, []);\n    assert.equal(await underliner.underline(namespaces[3].sourceRange), `\nParentNamespace.BarNamespace = {\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  foo: \\'bar\\'\n~~~~~~~~~~~~\n};\n~~`);\n  });\n\n  test('scans named, dynamic namespaces', async () => {\n    const namespaces = await getNamespaces('namespace-dynamic-named.js');\n    assert.equal(namespaces.length, 3);\n\n    assert.equal(namespaces[0].name, 'DynamicNamespace.ComputedProperty');\n    assert.equal(namespaces[0].description, '');\n    assert.deepEqual(namespaces[0].warnings, []);\n    assert.equal(await underliner.underline(namespaces[0].sourceRange), `\nDynamicNamespace['ComputedProperty'] = {\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  foo: 'bar'\n~~~~~~~~~~~~\n};\n~~`);\n\n    assert.equal(\n        namespaces[1].name, 'DynamicNamespace.UnanalyzableComputedProperty');\n    assert.equal(namespaces[1].description, '');\n    assert.deepEqual(namespaces[1].warnings, []);\n    assert.equal(await underliner.underline(namespaces[1].sourceRange), `\nDynamicNamespace[baz] = {\n~~~~~~~~~~~~~~~~~~~~~~~~~\n  foo: 'bar'\n~~~~~~~~~~~~\n};\n~~`);\n\n    assert.equal(namespaces[2].name, 'DynamicNamespace.Aliased');\n    assert.equal(namespaces[2].description, '');\n    assert.deepEqual(namespaces[2].warnings, []);\n    assert.equal(await underliner.underline(namespaces[2].sourceRange), `\naliasToNamespace = {\n~~~~~~~~~~~~~~~~~~~~\n  foo: 'bar'\n~~~~~~~~~~~~\n};\n~~`);\n  });\n\n  test('scans unnamed, dynamic namespaces', async () => {\n    const namespaces = await getNamespaces('namespace-dynamic-unnamed.js');\n    assert.equal(namespaces.length, 1);\n\n    assert.equal(\n        namespaces[0].name, 'DynamicNamespace.InferredComputedProperty');\n    assert.equal(namespaces[0].description, '');\n    assert.deepEqual(namespaces[0].warnings, []);\n    assert.equal(await underliner.underline(namespaces[0].sourceRange), `\nDynamicNamespace['InferredComputedProperty'] = {\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  foo: 'bar'\n~~~~~~~~~~~~\n};\n~~`);\n  });\n\n  test('scans properties', async () => {\n    const namespaces = await getNamespaces('namespace-properties.js');\n    assert.equal(namespaces.length, 1);\n\n    assert.equal(namespaces[0].name, 'PropertiesNamespace');\n    assert.equal(namespaces[0].description, '');\n    assert.deepEqual(namespaces[0].warnings, []);\n    assert.deepEqual(getProperties(namespaces[0]), [\n      {\n        name: 'property',\n        description: undefined,\n        privacy: 'public',\n        readOnly: false,\n        type: 'string',\n        warnings: []\n      },\n      {\n        name: 'propertyWithAnnotation',\n        description: 'Property with annotation',\n        privacy: 'public',\n        readOnly: false,\n        type: '(string | number)',\n        warnings: []\n      },\n      {\n        name: 'propertyWithReadOnly',\n        description: undefined,\n        privacy: 'public',\n        readOnly: true,\n        type: 'string',\n        warnings: []\n      },\n      {\n        name: 'propertyWithGetter',\n        description: undefined,\n        privacy: 'public',\n        readOnly: true,\n        type: undefined,\n        warnings: []\n      },\n      {\n        name: 'propertyWithGetterSetter',\n        description: undefined,\n        privacy: 'public',\n        readOnly: false,\n        type: undefined,\n        warnings: []\n      },\n      {\n        name: 'propertyWithSetterFirst',\n        description: undefined,\n        privacy: 'public',\n        readOnly: false,\n        type: undefined,\n        warnings: []\n      },\n      {\n        name: 'propertyDefinedLater',\n        description: undefined,\n        privacy: 'public',\n        readOnly: false,\n        type: 'string',\n        warnings: []\n      },\n      {\n        name: 'propertyDefinedLaterWithAnnotation',\n        description: 'Test property',\n        privacy: 'public',\n        readOnly: false,\n        type: 'boolean',\n        warnings: []\n      },\n      {\n        name: 'propertyDefinedLaterWithoutValue',\n        description: undefined,\n        privacy: 'public',\n        readOnly: false,\n        type: 'string',\n        warnings: []\n      }\n    ]);\n  });\n});\n"]}