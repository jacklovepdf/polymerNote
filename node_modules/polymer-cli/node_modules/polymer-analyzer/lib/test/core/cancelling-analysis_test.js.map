{"version":3,"sources":["../src/test/core/cancelling-analysis_test.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;;;;;;;;;AAGH,+CAAyC;AAEzC,8CAA6D;AAE7D,KAAK,CAAC,oCAAoC,EAAE,GAAG,EAAE;IAC/C,IAAI,CAAC,4CAA4C,EAAE,GAAS,EAAE;QAC5D,MAAM,EAAC,QAAQ,EAAC,GAAG,MAAM,+BAAkB,CAAC,uBAAU,CAAC,CAAC;QACxD,MAAM,YAAY,GAAG,0BAAW,CAAC,MAAM,EAAE,CAAC;QAE1C,MAAM,eAAe,GAAG,QAAQ,CAAC,OAAO,CACpC,CAAC,qBAAqB,CAAC,EAAE,EAAC,WAAW,EAAE,YAAY,CAAC,KAAK,EAAC,CAAC,CAAC;QAChE,YAAY,CAAC,MAAM,EAAE,CAAC;QACtB,MAAM,QAAQ,GAAG,MAAM,eAAe,CAAC;QACvC,MAAM,MAAM,GAAG,QAAQ,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;QAC1D,IAAI,MAAM,CAAC,UAAU,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;SACvE;IACH,CAAC,CAAA,CAAC,CAAC;IAEH,IAAI,CAAC,uDAAuD,EAAE,GAAS,EAAE;QACvE,MAAM,EAAC,QAAQ,EAAC,GAAG,MAAM,+BAAkB,CAAC,uBAAU,CAAC,CAAC;QACxD,MAAM,YAAY,GAAG,0BAAW,CAAC,MAAM,EAAE,CAAC;QAC1C,MAAM,GAAG,GAAG,qBAAqB,CAAC;QAClC,MAAM,wBAAwB,GAC1B,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,EAAC,WAAW,EAAE,YAAY,CAAC,KAAK,EAAC,CAAC,CAAC;QAC/D,MAAM,mBAAmB,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACpD,YAAY,CAAC,MAAM,EAAE,CAAC;QACtB,MAAM,iBAAiB,GAAG,MAAM,wBAAwB,CAAC;QACzD,MAAM,eAAe,GAAG,iBAAiB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC3D,IAAI,eAAe,CAAC,UAAU,EAAE;YAC9B,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;SACzE;QACD,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC;QAC/C,MAAM,UAAU,GAAG,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACjD,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;YAC1B,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;SACzE;IACH,CAAC,CAAA,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"cancelling-analysis_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\nimport {CancelToken} from 'cancel-token';\n\nimport {createForDirectory, fixtureDir} from '../test-utils';\n\nsuite('cancelling analysis midway through', () => {\n  test(`analyze() does not complete when cancelled`, async () => {\n    const {analyzer} = await createForDirectory(fixtureDir);\n    const cancelSource = CancelToken.source();\n\n    const analysisPromise = analyzer.analyze(\n        ['vanilla-elements.js'], {cancelToken: cancelSource.token});\n    cancelSource.cancel();\n    const analysis = await analysisPromise;\n    const result = analysis.getDocument('vanilla-element.js');\n    if (result.successful) {\n      throw new Error(`Did not expect analysis to succeed when cancelled.`);\n    }\n  });\n\n  test('we can handle parallel requests, one canceled one not', async () => {\n    const {analyzer} = await createForDirectory(fixtureDir);\n    const cancelSource = CancelToken.source();\n    const url = 'vanilla-elements.js';\n    const cancelledAnalysisPromise =\n        analyzer.analyze([url], {cancelToken: cancelSource.token});\n    const goodAnalysisPromise = analyzer.analyze([url]);\n    cancelSource.cancel();\n    const cancelledAnalysis = await cancelledAnalysisPromise;\n    const cancelledResult = cancelledAnalysis.getDocument(url);\n    if (cancelledResult.successful) {\n      throw new Error(`Expected cancelled analysis not to yield a document.`);\n    }\n    const goodAnalysis = await goodAnalysisPromise;\n    const goodResult = goodAnalysis.getDocument(url);\n    if (!goodResult.successful) {\n      throw new Error(`Expected non-cancelled analysis to yield a document.`);\n    }\n  });\n});\n"]}