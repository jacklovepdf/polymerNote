{"version":3,"sources":["../src/test/core/analyzer_test.ts"],"names":[],"mappings":"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","file":"analyzer_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/// <reference path=\"../../../node_modules/@types/mocha/index.d.ts\" />\n\nimport * as babel from '@babel/types';\nimport {assert, use} from 'chai';\nimport * as clone from 'clone';\nimport * as path from 'path';\nimport * as shady from 'shady-css-parser';\n\nimport {Analyzer, Options} from '../../core/analyzer';\nimport {Deferred} from '../../core/utils';\nimport {ParsedCssDocument} from '../../css/css-document';\nimport {ParsedHtmlDocument} from '../../html/html-document';\nimport {HtmlParser} from '../../html/html-parser';\nimport {ScriptTagImport} from '../../html/html-script-tag';\nimport {JavaScriptDocument} from '../../javascript/javascript-document';\nimport {Document, ScannedImport, ScannedInlineDocument, Severity, Warning} from '../../model/model';\nimport {FsUrlLoader} from '../../url-loader/fs-url-loader';\nimport {InMemoryOverlayUrlLoader} from '../../url-loader/overlay-loader';\nimport {UrlLoader} from '../../url-loader/url-loader';\nimport {CodeUnderliner, createForDirectory, fixtureDir, resolvedUrl} from '../test-utils';\n\nimport chaiAsPromised = require('chai-as-promised');\nimport chaiSubset = require('chai-subset');\nimport stripIndent = require('strip-indent');\nimport {ResolvedUrl, FileRelativeUrl} from '../../model/url';\nimport {PackageUrlResolver} from '../../url-loader/package-url-resolver';\nimport {AnalysisContext} from '../../core/analysis-context';\nimport {HtmlScanner} from '../../html/html-scanner';\nimport {ScannedFeature} from '../../index';\nimport Uri from 'vscode-uri';\nimport {neverCancels} from '../../core/cancel-token';\n\nuse(chaiSubset);\nuse(chaiAsPromised);\n\nfunction getOnly<V>(iter: Iterable<V>): V {\n  const arr = Array.from(iter);\n  assert.equal(arr.length, 1);\n  return arr[0]!;\n}\n\nconst testDir = path.join(fixtureDir, '..');\n\nsuite('Analyzer', () => {\n  let analyzer: Analyzer;\n  let inMemoryOverlay: InMemoryOverlayUrlLoader;\n  let underliner: CodeUnderliner;\n\n  async function analyzeDocument(\n      url: string, localAnalyzer?: Analyzer): Promise<Document> {\n    localAnalyzer = localAnalyzer || analyzer;\n    const result = (await localAnalyzer.analyze([url])).getDocument(url);\n    if (!result.successful) {\n      throw new Error(`Could not get document for url: ${url}`);\n    }\n    return result.value;\n  }\n\n  setup(() => {\n    const underlyingUrlLoader = new FsUrlLoader(testDir);\n    inMemoryOverlay = new InMemoryOverlayUrlLoader(underlyingUrlLoader);\n    analyzer = new Analyzer({\n      urlLoader: inMemoryOverlay,\n      urlResolver: new PackageUrlResolver({packageDir: testDir})\n    });\n    underliner = new CodeUnderliner(inMemoryOverlay);\n  });\n\n  test('canLoad delegates to the urlLoader canLoad method', () => {\n    assert.isTrue(\n        analyzer.canLoad(Uri.file(testDir).toString() as ResolvedUrl));\n    assert.isFalse(analyzer.canLoad(\n        Uri.file(path.resolve(testDir, '../outside')).toString() as\n        ResolvedUrl));\n    assert.isFalse(analyzer.canLoad(resolvedUrl`file://hostname/path`));\n    assert.isFalse(analyzer.canLoad(resolvedUrl`http://host/`));\n    assert.isFalse(analyzer.canLoad(resolvedUrl`http://host/path`));\n  });\n\n  suite('analyze()', () => {\n    let testName = 'analyzes a document with an inline Polymer element feature';\n    test(testName, async () => {\n      const document =\n          await analyzeDocument('static/analysis/simple/simple-element.html');\n      const elements =\n          Array.from(document.getFeatures({kind: 'element', imported: false}));\n      assert.deepEqual(elements.map((e) => e.tagName), ['simple-element']);\n    });\n\n    testName = 'analyzes a document with an external Polymer element feature';\n    test(testName, async () => {\n      const document =\n          await analyzeDocument('static/analysis/separate-js/element.html');\n      const elements =\n          Array.from(document.getFeatures({kind: 'element', imported: true}));\n      assert.deepEqual(elements.map((e) => e.tagName), ['my-element']);\n    });\n\n    test('gets source ranges of documents correct', async () => {\n      const document = await analyzeDocument('static/dependencies/root.html');\n      assert.deepEqual(await underliner.underline(document.sourceRange), `\n<link rel=\"import\" href=\"inline-only.html\">\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n<link rel=\"import\" href=\"leaf.html\">\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n<link rel=\"import\" href=\"inline-and-imports.html\">\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n<link rel=\"import\" href=\"subfolder/in-folder.html\">\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n<link rel=\"lazy-import\" href=\"lazy.html\">\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n`);\n    });\n\n    test('analyzes inline scripts correctly', async () => {\n      const document = await analyzeDocument(\n          'static/inline-documents/inline-documents.html');\n      const jsDocuments = document.getFeatures({kind: 'js-document'});\n      assert.equal(jsDocuments.size, 1);\n      const jsDocument = getOnly(jsDocuments);\n      assert.isObject(jsDocument.astNode);\n      const astNode = jsDocument.astNode!;\n      if (astNode.language !== 'html') {\n        throw new Error(\n            'Expected inline js doc to have an HTML containing node.');\n      }\n      assert.equal(astNode.node.tagName, 'script');\n      assert.deepEqual(await underliner.underline(jsDocument.sourceRange), `\n  <script>\n          ~\n    console.log('hi');\n~~~~~~~~~~~~~~~~~~~~~~\n  </script>\n~~`);\n    });\n\n    test('analyzes inline styles correctly', async () => {\n      const document = await analyzeDocument(\n          'static/inline-documents/inline-documents.html');\n      const cssDocuments = document.getFeatures({kind: 'css-document'});\n      const cssDocument = getOnly(cssDocuments);\n      const astNode = cssDocument.astNode!;\n      assert.isObject(astNode);\n      if (astNode.language !== 'html') {\n        throw new Error(\n            'Expected inline css doc to have an HTML containing node.');\n      }\n      assert.equal(astNode.node.tagName, 'style');\n      assert.deepEqual(await underliner.underline(cssDocument.sourceRange), `\n  <style>\n         ~\n    body {\n~~~~~~~~~~\n      color: red;\n~~~~~~~~~~~~~~~~~\n    }\n~~~~~\n  </style>\n~~`);\n    });\n\n    test('analyzes a document with an import', async () => {\n      const document =\n          await analyzeDocument('static/analysis/behaviors/behavior.html');\n      const behaviors =\n          Array.from(document.getFeatures({kind: 'behavior', imported: true}));\n      assert.deepEqual(\n          behaviors.map((b) => b.className),\n          ['MyNamespace.SubBehavior', 'MyNamespace.SimpleBehavior']);\n    });\n\n    testName = 'gives a useful warning when analyzing a nonexistant file';\n    test(testName, async () => {\n      const analysis =\n          await analyzer.analyze(['static/analysis/does-not-exist.html']);\n      const warnings = analysis.getWarnings();\n      assert.deepEqual(warnings.map((w) => w.code), ['could-not-load']);\n      assert.match(warnings[0].message, /^No such file: /);\n    });\n\n    testName = `creates \"missing behavior\" warnings on imported ` +\n        `documents without elements`;\n    test(testName, async () => {\n      const document =\n          await analyzeDocument('static/chained-missing-behavior/index.html');\n      const chainedDocument = getOnly(document.getFeatures({\n        kind: 'document',\n        id: analyzer.resolveUrl('static/chained-missing-behavior/chained.html'),\n        imported: true\n      }));\n      const expectedWarning = {\n        code: 'could-not-resolve-reference',\n        message:\n            'Could not resolve reference to behavior. Is it annotated with' +\n            ' @polymerBehavior?',\n        severity: 1,\n        sourceRange: {\n          end: {column: 55, line: 2},\n          start: {column: 39, line: 2},\n          file: analyzer.resolveUrl(\n              'static/chained-missing-behavior/chained.html')\n        },\n      };\n      assert.deepEqual(document.getWarnings({imported: false}), []);\n      assert.deepEqual(\n          document.getWarnings({imported: true}).map((w) => w.toJSON()),\n          [expectedWarning]);\n      assert.deepEqual(\n          chainedDocument.getWarnings({imported: false}).map((w) => w.toJSON()),\n          [expectedWarning]);\n    });\n\n    testName =\n        'an inline document can find features from its container document';\n    test(testName, async () => {\n      const document =\n          await analyzeDocument('static/analysis/behaviors/behavior.html');\n      const localDocuments =\n          document.getFeatures({kind: 'document', imported: false});\n      assert.equal(localDocuments.size, 2);  // behavior.html and its inline\n\n      const allDocuments =\n          document.getFeatures({kind: 'document', imported: true});\n      assert.equal(allDocuments.size, 4);\n\n      const inlineDocuments =\n          Array.from(document.getFeatures({kind: 'document', imported: false}))\n              .filter((d) => d instanceof Document && d.isInline);\n      assert.equal(inlineDocuments.length, 1);\n\n      // This is the main purpose of the test: get a feature from\n      // the inline\n      // document that's imported by the container document\n      const behaviorJsDocument = inlineDocuments[0];\n      const subBehavior = getOnly(behaviorJsDocument.getFeatures(\n          {kind: 'behavior', id: 'MyNamespace.SubBehavior', imported: true}));\n      assert.equal(subBehavior!.className, 'MyNamespace.SubBehavior');\n    });\n\n    testName = 'an inline script can find features from its container document';\n    test(testName, async () => {\n      const document =\n          await analyzeDocument('static/script-tags/inline/test-element.html');\n      const inlineDocuments =\n          Array.from(document.getFeatures({kind: 'document', imported: false}))\n              .filter((d) => d.isInline);\n      assert.equal(inlineDocuments.length, 1);\n      const inlineJsDocument = inlineDocuments[0];\n\n      // The inline document can find the container's imported\n      // features\n      const subBehavior = getOnly(inlineJsDocument.getFeatures(\n          {kind: 'behavior', id: 'TestBehavior', imported: true}));\n      assert.equal(subBehavior!.className, 'TestBehavior');\n    });\n\n    testName = 'an inline feature can narrow down its containing document';\n    test(testName, async () => {\n      const url = 'static/script-tags/inline/test-element.html';\n      const result = (await analyzer.analyze([url]));\n      const document = result.getDocument(url);\n      if (!document.successful) {\n        throw new Error(`Could not get document for url: ${url}`);\n      }\n      const inlineDocuments = Array\n                                  .from(document.value.getFeatures(\n                                      {kind: 'document', imported: false}))\n                                  .filter((d) => d.isInline);\n      assert.equal(inlineDocuments.length, 1);\n      const inlineJsDocument = inlineDocuments[0];\n\n      // The inline document can find the container's imported\n      // features\n      const subBehavior = getOnly(document.value.getFeatures(\n          {kind: 'polymer-element', id: 'test-element', imported: true}));\n      const narrowedDocument =\n          result.getDocumentContaining(subBehavior.sourceRange);\n      assert.equal(narrowedDocument, inlineJsDocument);\n    });\n\n    testName =\n        'a feature in the top level document narrows down to the full document';\n    test(testName, async () => {\n      const url = 'static/script-tags/inline/test-element.html';\n      const result = (await analyzer.analyze([url]));\n      const document = result.getDocument(url);\n      if (!document.successful) {\n        throw new Error(`Could not get document for url: ${url}`);\n      }\n\n      // The inline document can find the container's imported\n      // features\n      const HTMLImport =\n          getOnly(document.value.getFeatures({kind: 'html-import'}));\n      const narrowedDocument =\n          result.getDocumentContaining(HTMLImport.sourceRange);\n      assert.equal(narrowedDocument, document.value);\n    });\n\n    testName =\n        'an external script can find features from its container document';\n    test(testName, async () => {\n      const document = await analyzeDocument(\n          'static/script-tags/external/test-element.html');\n\n      const htmlScriptTags = Array.from(\n          document.getFeatures({kind: 'html-script', imported: false}));\n      assert.equal(htmlScriptTags.length, 1);\n\n      const htmlScriptTag = htmlScriptTags[0] as ScriptTagImport;\n      const scriptDocument = htmlScriptTag.document;\n\n      // The inline document can find the container's imported\n      // features\n      const subBehavior = getOnly(scriptDocument!.getFeatures(\n          {kind: 'behavior', id: 'TestBehavior', imported: true}))!;\n      assert.equal(subBehavior.className, 'TestBehavior');\n    });\n\n\n    // This test is nearly identical to the previous, but covers a different\n    // issue.\n    // PolymerElement must find behaviors while resolving, and if inline\n    // documents don't add a document feature for their container until after\n    // resolution, then the element can't find them and throws.\n    testName =\n        'an inline document can find behaviors from its container document';\n    test(testName, async () => {\n      const document = await analyzeDocument(\n          'static/analysis/behaviors/elementdir/element.html');\n\n      const documents =\n          document.getFeatures({kind: 'document', imported: false});\n      assert.equal(documents.size, 2);\n\n      const inlineDocuments = Array.from(documents).filter(\n          (d) => d instanceof Document && d.isInline);\n      assert.equal(inlineDocuments.length, 1);\n\n      // This is the main purpose of the test: get a feature\n      // from the inline\n      // document that's imported by the container document\n      const behaviorJsDocument = inlineDocuments[0];\n      const subBehavior = getOnly(behaviorJsDocument.getFeatures(\n          {kind: 'behavior', id: 'MyNamespace.SubBehavior', imported: true}));\n      assert.equal(subBehavior.className, 'MyNamespace.SubBehavior');\n    });\n\n    test('returns a Document with warnings for malformed files', async () => {\n      const document = await analyzeDocument('static/malformed.html');\n      assert(document.getWarnings({imported: false}).length >= 1);\n    });\n\n    test('analyzes transitive dependencies', async () => {\n      const root = await analyzeDocument('static/dependencies/root.html');\n\n      // If we ask for documents we get every document in evaluation order.\n      const strictlyReachableDocuments = [\n        ['static/dependencies/root.html', 'html', false],\n        ['static/dependencies/inline-only.html', 'html', false],\n        ['static/dependencies/inline-only.html', 'js', true],\n        ['static/dependencies/inline-only.html', 'css', true],\n        ['static/dependencies/leaf.html', 'html', false],\n        ['static/dependencies/inline-and-imports.html', 'html', false],\n        ['static/dependencies/inline-and-imports.html', 'js', true],\n        ['static/dependencies/subfolder/in-folder.html', 'html', false],\n        ['static/dependencies/subfolder/subfolder-sibling.html', 'html', false],\n        ['static/dependencies/inline-and-imports.html', 'css', true],\n      ].map(([u, t, i]) => [analyzer.resolveUrl(u as string), t, i]);\n\n      // If we ask for documents we get every document in\n      // evaluation order.\n      assert.deepEqual(\n          Array\n              .from(root.getFeatures(\n                  {kind: 'document', imported: true, noLazyImports: true}))\n              .map((d) => [d.url, d.parsedDocument.type, d.isInline]),\n          strictlyReachableDocuments);\n\n      assert.deepEqual(\n          Array.from(root.getFeatures({kind: 'document', imported: true}))\n              .map((d) => [d.url, d.parsedDocument.type, d.isInline]),\n          strictlyReachableDocuments.concat([[\n            analyzer.resolveUrl('static/dependencies/lazy.html'),\n            'html',\n            false\n          ]]));\n\n\n      // If we ask for imports we get the import statements in evaluation order.\n      // Unlike documents, we can have duplicates here because imports exist in\n      // distinct places in their containing docs.\n      assert.deepEqual(\n          Array.from(root.getFeatures({kind: 'import', imported: true}))\n              .map((d) => d.url),\n          [\n            'static/dependencies/inline-only.html',\n            'static/dependencies/leaf.html',\n            'static/dependencies/inline-and-imports.html',\n            'static/dependencies/subfolder/in-folder.html',\n            'static/dependencies/subfolder/subfolder-sibling.html',\n            'static/dependencies/subfolder/in-folder.html',\n            'static/dependencies/lazy.html',\n          ].map((u) => analyzer.resolveUrl(u)));\n\n      const inlineOnly = getOnly(root.getFeatures({\n        kind: 'document',\n        id: analyzer.resolveUrl('static/dependencies/inline-only.html'),\n        imported: true\n      }));\n      assert.deepEqual(\n          Array\n              .from(inlineOnly!.getFeatures({kind: 'document', imported: true}))\n              .map((d) => d.parsedDocument.type),\n          ['html', 'js', 'css']);\n\n      const leaf = getOnly(root.getFeatures({\n        kind: 'document',\n        id: analyzer.resolveUrl('static/dependencies/leaf.html'),\n        imported: true\n      }));\n      assert.deepEqual(\n          Array.from(leaf.getFeatures({kind: 'document', imported: true})),\n          [leaf]);\n\n      const inlineAndImports = getOnly(root.getFeatures({\n        kind: 'document',\n        id: analyzer.resolveUrl('static/dependencies/inline-and-imports.html'),\n        imported: true\n      }));\n      assert.deepEqual(\n          Array\n              .from(inlineAndImports.getFeatures(\n                  {kind: 'document', imported: true}))\n              .map((d) => d.parsedDocument.type),\n          ['html', 'js', 'html', 'html', 'css']);\n      const inFolder = getOnly(root.getFeatures({\n        kind: 'document',\n        id: analyzer.resolveUrl('static/dependencies/subfolder/in-folder.html'),\n        imported: true\n      }));\n      assert.deepEqual(\n          Array.from(inFolder.getFeatures({kind: 'document', imported: true}))\n              .map((d) => d.url),\n          [\n            'static/dependencies/subfolder/in-folder.html',\n            'static/dependencies/subfolder/subfolder-sibling.html'\n          ].map((u) => analyzer.resolveUrl(u)));\n\n      // check de-duplication\n      assert.equal(\n          getOnly(inlineAndImports!.getFeatures({\n            kind: 'document',\n            id: analyzer.resolveUrl(\n                'static/dependencies/subfolder/in-folder.html'),\n            imported: true\n          })),\n          inFolder);\n    });\n\n    test(`warns for files that don't exist`, async () => {\n      const url = '/static/does_not_exist.html';\n      const analysis = await analyzer.analyze([url]);\n      const result = analysis.getDocument(url);\n      if (result.successful) {\n        throw new Error('Expected a failed result from getDocument');\n      }\n      assert.isTrue(result.error instanceof Warning);\n    });\n\n    test('handles documents from multiple calls to analyze()', async () => {\n      await analyzer.analyze(['static/caching/file1.html']);\n      await analyzer.analyze(['static/caching/file2.html']);\n    });\n\n    test('handles mutually recursive documents', async () => {\n      const document = await analyzeDocument('static/circular/mutual-a.html');\n      assert.deepEqual(\n          [...document.getFeatures({kind: 'document'})].map((f) => f.url),\n          [analyzer.resolveUrl('static/circular/mutual-a.html')]);\n      assert.deepEqual(\n          [...document.getFeatures({kind: 'import'})].map((f) => f.url),\n          [analyzer.resolveUrl('static/circular/mutual-b.html')]);\n\n      assert.deepEqual(\n          [...document.getFeatures({kind: 'document', imported: true})].map(\n              (f) => f.url),\n          ['static/circular/mutual-a.html', 'static/circular/mutual-b.html']\n              .map((u) => analyzer.resolveUrl(u)));\n      assert.deepEqual(\n          [...document.getFeatures({kind: 'import', imported: true})].map(\n              (f) => f.url),\n          ['static/circular/mutual-b.html', 'static/circular/mutual-a.html']\n              .map((u) => analyzer.resolveUrl(u)));\n    });\n\n    testName = 'handles parallel analyses of mutually recursive documents';\n    test(testName, async () => {\n      // At one point this deadlocked, or threw\n      // a _makeDocument error.\n      await Promise.all([\n        analyzer.analyze(['static/circular/mutual-a.html']),\n        analyzer.analyze(['static/circular/mutual-b.html'])\n      ]);\n    });\n\n    test('handles a document importing itself', async () => {\n      const document =\n          await analyzeDocument('static/circular/self-import.html');\n      assert.deepEqual(\n          [...document.getFeatures({kind: 'document', imported: true})].map(\n              (f) => f.url),\n          ['static/circular/self-import.html'].map(\n              (u) => analyzer.resolveUrl(u)));\n      assert.deepEqual(\n          [...document.getFeatures({kind: 'import', imported: true})].map(\n              (f) => f.url),\n          [\n            'static/circular/self-import.html',\n            'static/circular/self-import.html'\n          ].map((u) => analyzer.resolveUrl(u)));\n    });\n\n    suite('handles documents with spaces in filename', () => {\n      test('given a url with unencoded spaces to analyze', async () => {\n        const document = await analyzeDocument('static/spaces in file.html');\n        assert.deepEqual(\n            [...document.getFeatures({kind: 'document', imported: true})].map(\n                (f) => f.url),\n            [\n              'static/spaces in file.html',\n              'static/dependencies/spaces in import.html'\n            ].map((u) => analyzer.resolveUrl(u)));\n        assert.deepEqual(\n            [...document.getFeatures({kind: 'import', imported: true})].map(\n                (f) => f.url),\n            ['static/dependencies/spaces in import.html'].map(\n                (u) => analyzer.resolveUrl(u)));\n      });\n\n      test('given a url with encoded spaces to analyze', async () => {\n        const document =\n            await analyzeDocument('static/spaces%20in%20file.html');\n        assert.deepEqual(\n            [...document.getFeatures({kind: 'document', imported: true})].map(\n                (f) => f.url),\n            [\n              'static/spaces in file.html',\n              'static/dependencies/spaces in import.html'\n            ].map((u) => analyzer.resolveUrl(u)));\n        assert.deepEqual(\n            [...document.getFeatures({kind: 'import', imported: true})].map(\n                (f) => f.url),\n            ['static/dependencies/spaces in import.html'].map(\n                (u) => analyzer.resolveUrl(u)));\n      });\n\n      test('gracefully handles a scanner that throws', async () => {\n        const options: Options = {\n          urlResolver: analyzer.urlResolver,\n          urlLoader: inMemoryOverlay\n        };\n        const scanners = AnalysisContext.getDefaultScanners(options);\n        class FailingScanner implements HtmlScanner {\n          async scan():\n              Promise<{features: ScannedFeature[], warnings?: Warning[]}> {\n            throw new Error('Method not implemented.');\n          }\n        }\n        options.scanners = scanners;\n        scanners.get('html')!.push(new FailingScanner());\n        const localAnalyzer = new Analyzer(options);\n        const url = localAnalyzer.resolveUrl(`foo.html`)!;\n        inMemoryOverlay.urlContentsMap.set(url, `\n          <dom-module id=\"foo-bar\"></dom-module>\n        `);\n        const analysis = await localAnalyzer.analyze([url]);\n        const result = analysis.getDocument(url);\n        if (result.successful) {\n          throw new Error(`Got document with crashing scanner.`);\n        }\n        if (!result.error) {\n          throw new Error(\n              `No warning message for document with crashing scanner`);\n        }\n        assert.deepEqual(\n            result.error.message,\n            'Error while scanning: Error: Method not implemented.');\n      });\n    });\n  });\n\n  // TODO: reconsider whether we should test these private methods.\n  suite('_parse()', () => {\n    test('loads and parses an HTML document', async () => {\n      const context = await getContext(analyzer);\n      const docResult = await context['_parse'](\n          analyzer.resolveUrl(`static/html-parse-target.html`)!, neverCancels);\n      if (docResult.successful !== true) {\n        throw new Error(`Expected doc result to be successful.`);\n      }\n      const doc = docResult.value;\n      assert.instanceOf(doc, ParsedHtmlDocument);\n      assert.equal(\n          doc.url, analyzer.resolveUrl(`static/html-parse-target.html`)!);\n    });\n\n    test('loads and parses a JavaScript document', async () => {\n      const context = await getContext(analyzer);\n      const docResult = await context['_parse'](\n          analyzer.resolveUrl(`static/js-elements.js`)!, neverCancels);\n      if (docResult.successful !== true) {\n        throw new Error(`Expected doc result to be successful.`);\n      }\n      const doc = docResult.value;\n      assert.instanceOf(doc, JavaScriptDocument);\n      assert.equal(doc.url, analyzer.resolveUrl(`static/js-elements.js`));\n    });\n\n    test('returns a Promise of a Warning for non-existant files', async () => {\n      const context = await getContext(analyzer);\n      const result = await context['_parse'](\n          analyzer.resolveUrl(`static/not-found`)!, neverCancels);\n      if (result.successful === true) {\n        throw new Error(`Expected result to be unsuccessful`);\n      }\n    });\n  });\n\n  suite('_getScannedFeatures()', () => {\n    test('default import scanners', async () => {\n      const contents = `<html><head>\n          <link rel=\"import\" href=\"polymer.html\">\n          <script src=\"foo.js\"></script>\n          <link rel=\"stylesheet\" href=\"foo.css\"></link>\n        </head></html>`;\n      const document = new HtmlParser().parse(\n          contents, resolvedUrl`test.html`, new PackageUrlResolver());\n      const context = await getContext(analyzer);\n      const features =\n          ((await context['_getScannedFeatures'](document)).features as\n           ScannedImport[]);\n      assert.deepEqual(\n          features.map((e) => e.type),\n          ['html-import', 'html-script', 'html-style']);\n      assert.deepEqual(\n          features.map((e) => e.url),  //\n          ['polymer.html', 'foo.js', 'foo.css'] as FileRelativeUrl[]);\n    });\n\n    test('polymer css import scanner', async () => {\n      const contents = `<html><head>\n          <link rel=\"import\" type=\"css\" href=\"foo.css\">\n        </head>\n        <body>\n          <dom-module>\n            <link rel=\"import\" type=\"css\" href=\"bar.css\">\n          </dom-module>\n        </body></html>`;\n      const document = new HtmlParser().parse(\n          contents, resolvedUrl`test.html`, new PackageUrlResolver());\n      const context = await getContext(analyzer);\n      const features = (await context['_getScannedFeatures'](document))\n                           .features.filter(\n                               (e: ScannedFeature) => e instanceof\n                                   ScannedImport) as ScannedImport[];\n      assert.equal(features.length, 1);\n      assert.equal(features[0].type, 'css-import');\n      assert.equal(features[0].url, 'bar.css' as FileRelativeUrl);\n    });\n\n    test('HTML inline document scanners', async () => {\n      const contents = `<html><head>\n          <script>console.log('hi')</script>\n          <style>body { color: red; }</style>\n        </head></html>`;\n      const context = await getContext(analyzer);\n      const document = new HtmlParser().parse(\n          contents, resolvedUrl`test.html`, new PackageUrlResolver());\n      const features =\n          ((await context['_getScannedFeatures'](document)).features) as\n          ScannedInlineDocument[];\n\n      assert.equal(features.length, 2);\n      assert.instanceOf(features[0], ScannedInlineDocument);\n      assert.instanceOf(features[1], ScannedInlineDocument);\n    });\n\n    const testName =\n        'HTML inline documents can be cloned, modified, and stringified';\n    test(testName, async () => {\n      const contents = stripIndent(`\n        <div>\n          <script>\n            console.log(\"foo\");\n          </script>\n          <style>\n            body {\n              color: blue;\n            }\n          </style>\n        </div>\n      `).trim();\n      const modifiedContents = stripIndent(`\n        <div>\n          <script>\n            console.log(\"bar\");\n          </script>\n          <style>\n            body {\n              color: red;\n            }\n          </style>\n        </div>\n      `).trim();\n      inMemoryOverlay.urlContentsMap.set(\n          analyzer.resolveUrl('test-doc.html')!, contents);\n      const origDocument = await analyzeDocument('test-doc.html');\n      const document = clone(origDocument);\n\n      // In document, we'll change `foo` to\n      // `bar` in the js and `blue` to\n      // `red` in the css.\n      const jsDocs =\n          document.getFeatures({kind: 'js-document', imported: true});\n      assert.equal(1, jsDocs.size);\n      const jsDoc = getOnly(jsDocs);\n      (jsDoc.parsedDocument as JavaScriptDocument).visit([{\n        enterCallExpression(node: babel.CallExpression) {\n          node.arguments =\n              [{type: 'StringLiteral', value: 'bar'}] as babel.StringLiteral[];\n        }\n      }]);\n\n      const cssDocs =\n          document.getFeatures({kind: 'css-document', imported: true});\n      assert.equal(1, cssDocs.size);\n      const cssDoc = getOnly(cssDocs);\n      (cssDoc.parsedDocument as ParsedCssDocument).visit([{\n        visit(node: shady.Node) {\n          if (node.type === 'expression' && node.text === 'blue') {\n            node.text = 'red';\n          }\n        }\n      }]);\n\n      // We can stringify the clone and get the modified contents, and\n      // stringify the original and still get the original contents.\n      assert.deepEqual(document.stringify(), modifiedContents);\n      assert.deepEqual(origDocument.stringify(), contents);\n    });\n  });\n\n  suite('documentation extraction', () => {\n    test('we get the wrong description for paper-input', async () => {\n      const document = await analyzeDocument('static/paper-input.html');\n      const [element] =\n          document.getFeatures({kind: 'element', id: 'paper-input'});\n      assert(\n          !/fresh new hell/.test(element.description),\n          `Doesn't pick up on unexpected html comments.`);\n      assert(\n          element.description.startsWith('Material design: [Text fields]'),\n          `Does get the message right.`);\n    });\n  });\n\n  test('analyzes a document with a namespace', async () => {\n    const document = await analyzeDocument('static/namespaces/import-all.html');\n\n    const namespaces =\n        Array.from(document.getFeatures({kind: 'namespace', imported: true}));\n    assert.deepEqual(namespaces.map((b) => b.name), [\n      'ExplicitlyNamedNamespace',\n      'ExplicitlyNamedNamespace.NestedNamespace',\n      'ImplicitlyNamedNamespace',\n      'ImplicitlyNamedNamespace.NestedNamespace',\n      'ParentNamespace.FooNamespace',\n      'ParentNamespace.BarNamespace',\n      'DynamicNamespace.ComputedProperty',\n      'DynamicNamespace.UnanalyzableComputedProperty',\n      'DynamicNamespace.Aliased',\n      'DynamicNamespace.InferredComputedProperty',\n    ]);\n  });\n\n  // TODO(rictic): move duplicate checks into scopes/analysis results.\n  //     No where else has reliable knowledge of the clash.\n  const testName = 'creates warnings when duplicate namespaces are analyzed';\n  test.skip(testName, async () => {\n    const document =\n        await analyzer.analyze(['static/namespaces/import-duplicates.html']);\n    const namespaces = Array.from(document.getFeatures({kind: 'namespace'}));\n    assert.deepEqual(namespaces.map((b) => b.name), [\n      'ExplicitlyNamedNamespace',\n      'ExplicitlyNamedNamespace.NestedNamespace',\n    ]);\n    const warnings = document.getWarnings();\n    assert.containSubset(\n        warnings, [{\n          message:\n              'Found more than one namespace named ExplicitlyNamedNamespace.',\n          severity: Severity.WARNING,\n          code: 'multiple-javascript-namespaces',\n        }]);\n    assert.deepEqual(await underliner.underline(warnings), [`\nvar DuplicateNamespace = {};\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~`]);\n  });\n\n  test('treats module script tags as normal imports', async () => {\n    const analysis =\n        await analyzer.analyze(['static/script-tags/modules/index.html']);\n    const warnings = analysis.getWarnings();\n    assert.deepEqual(\n        warnings.map((w) => w.code), ['could-not-resolve-reference']);\n    assert.deepEqual(await underliner.underline(analysis.getWarnings()), [\n      `\nclass Bar extends Foo {\n                  ~~~`,\n    ]);\n  });\n\n  suite('analyzePackage', () => {\n    test('produces a package with the right documents', async () => {\n      const {analyzer} =\n          await createForDirectory(path.join(fixtureDir, 'project'));\n      const pckage = await analyzer.analyzePackage();\n\n      // The root documents of the package are a minimal set of documents whose\n      // imports touch every document in the package.\n      assert.deepEqual(\n          Array.from(pckage['_searchRoots']).map((d) => d.url).sort(), [\n            'build/output.html',\n            'cyclic-a.html',\n            'root.html',\n            'subdir/root-in-subdir.html'\n          ].map((u) => analyzer.resolveUrl(u)).sort());\n\n      // Note that this does not contain the bower_components/ files\n      assert.deepEqual(\n          Array.from(pckage.getFeatures({kind: 'document'}))\n              .filter((d) => !d.isInline)\n              .map((d) => d.url)\n              .sort(),\n          [\n            'build/output.html',\n            'cyclic-a.html',\n            'cyclic-b.html',\n            'root.html',\n            'leaf.html',\n            'subdir/subdir-leaf.html',\n            'subdir/root-in-subdir.html'\n          ].map((u) => analyzer.resolveUrl(u))\n              .sort());\n\n      // And this does contain the one imported file in bower_components/\n      assert.deepEqual(\n          Array\n              .from(pckage.getFeatures(\n                  {kind: 'document', externalPackages: true}))\n              .filter((d) => !d.isInline)\n              .map((d) => d.url)\n              .sort(),\n          [\n            'build/output.html',\n            'cyclic-a.html',\n            'cyclic-b.html',\n            'root.html',\n            'leaf.html',\n            'subdir/subdir-leaf.html',\n            'subdir/root-in-subdir.html',\n            'bower_components/imported.html',\n          ].map((u) => analyzer.resolveUrl(u))\n              .sort());\n\n      const packageElements = [\n        'build-output',\n        'root-root',\n        'leaf-leaf',\n        'cyclic-a',\n        'cyclic-b',\n        'root-in-subdir',\n        'subdir-leaf'\n      ];\n\n      // All elements in the package\n      assert.deepEqual(\n          Array.from(pckage.getFeatures({kind: 'element'}))\n              .map((e) => e.tagName)\n              .sort(),\n          packageElements.sort());\n\n      // All elements in the package, as well as all elements in\n      // its bower_components directory that are reachable from imports in the\n      // package.\n      assert.deepEqual(\n          Array\n              .from(\n                  pckage.getFeatures({kind: 'element', externalPackages: true}))\n              .map((e) => e.tagName)\n              .sort(),\n          packageElements.concat(['imported-dependency']).sort());\n    });\n\n    test('can get warnings from within and without the package', async () => {\n      const {analyzer} = await createForDirectory(\n          path.join(fixtureDir, 'project-with-errors'));\n      const pckage = await analyzer.analyzePackage();\n      assert.deepEqual(\n          Array.from(pckage['_searchRoots']).map((d) => d.url),\n          ['index.html', 'build/output.html'].map(\n              (u) => analyzer.resolveUrl(u)));\n      assert.deepEqual(pckage.getWarnings().map((w) => w.sourceRange.file), [\n        analyzer.resolveUrl('index.html'),\n        analyzer.resolveUrl('build/output.html')\n      ]);\n      assert.deepEqual(\n          pckage.getWarnings({externalPackages: true})\n              .map((w) => w.sourceRange.file)\n              .sort(),\n          [\n            'bower_components/external-with-warnings.html',\n            'build/output.html',\n            'index.html',\n          ].map((u) => analyzer.resolveUrl(u)));\n    });\n  });\n\n  suite('_fork', () => {\n    test('returns an independent copy of Analyzer', async () => {\n      inMemoryOverlay.urlContentsMap.set(\n          analyzer.resolveUrl('a.html')!, 'a is shared');\n      await analyzer.analyze(['a.html']);\n      // Unmap a.html so that future reads of it will fail, thus testing the\n      // cache.\n      inMemoryOverlay.urlContentsMap.delete(analyzer.resolveUrl('a.html')!);\n\n      const analyzer2 = await analyzer._fork();\n      inMemoryOverlay.urlContentsMap.set(\n          analyzer.resolveUrl('b.html')!, 'b for analyzer');\n      await analyzer.analyze(['b.html']);\n      inMemoryOverlay.urlContentsMap.set(\n          analyzer.resolveUrl('b.html')!, 'b for analyzer2');\n      await analyzer2.analyze(['b.html']);\n      inMemoryOverlay.urlContentsMap.delete(analyzer.resolveUrl('b.html')!);\n\n      const a1 = await analyzeDocument('a.html', analyzer);\n      const a2 = await analyzeDocument('a.html', analyzer2);\n      const b1 = await analyzeDocument('b.html', analyzer);\n      const b2 = await analyzeDocument('b.html', analyzer2);\n\n      assert.equal(a1.parsedDocument.contents, 'a is shared');\n      assert.equal(a2.parsedDocument.contents, 'a is shared');\n      assert.equal(b1.parsedDocument.contents, 'b for analyzer');\n      assert.equal(b2.parsedDocument.contents, 'b for analyzer2');\n    });\n\n    test('supports overriding of urlLoader', async () => {\n      const loader1 = {\n        canLoad: () => true,\n        load: async (u: string) => `${u} 1`\n      };\n      const loader2 = {\n        canLoad: () => true,\n        load: async (u: string) => `${u} 2`\n      };\n      const analyzer1 = new Analyzer({urlLoader: loader1});\n      const a1 = await analyzeDocument('a.html', analyzer1);\n      const analyzer2 = await analyzer1._fork({urlLoader: loader2});\n      const a2 = await analyzeDocument('a.html', analyzer2);\n      const b1 = await analyzeDocument('b.html', analyzer1);\n      const b2 = await analyzeDocument('b.html', analyzer2);\n\n      assert.isTrue(\n          a1.parsedDocument.contents.endsWith('a.html 1'), 'a.html, loader 1');\n      assert.isTrue(\n          a2.parsedDocument.contents.endsWith('a.html 1'), 'a.html, in cache');\n      assert.isTrue(\n          b1.parsedDocument.contents.endsWith('b.html 1'), 'b.html, loader 1');\n      assert.isTrue(\n          b2.parsedDocument.contents.endsWith('b.html 2'), 'b.html, loader 2');\n    });\n  });\n\n  suite('race conditions and caching', () => {\n    test('maintain caches across multiple edits', async () => {\n      // This is a regression test of a scenario where changing a dependency\n      // did not properly update warnings of a file. The bug turned out to\n      // be in the dependency graph, but this test seems useful enough to\n      // keep around.\n      // The specific warning is renaming a superclass without updating the\n      // class which extends it.\n      inMemoryOverlay.urlContentsMap.set(analyzer.resolveUrl('base.js')!, `\n        class BaseElement extends HTMLElement {}\n        customElements.define('base-elem', BaseElement);\n      `);\n      inMemoryOverlay.urlContentsMap.set(analyzer.resolveUrl('user.html')!, `\n        <script src=\"./base.js\"></script>\n        <script>\n          class UserElem extends BaseElement {}\n          customElements.define('user-elem', UserElem);\n        </script>\n      `);\n      const b1Doc = await analyzer.analyze(['base.js']);\n      assert.deepEqual(b1Doc.getWarnings(), []);\n      const u1Doc = await analyzer.analyze(['user.html']);\n      assert.deepEqual(u1Doc.getWarnings(), []);\n\n      inMemoryOverlay.urlContentsMap.set(analyzer.resolveUrl('base.js')!, `\n        class NewSpelling extends HTMLElement {}\n        customElements.define('base-elem', NewSpelling);\n      `);\n      analyzer.filesChanged(['base.js']);\n      const b2Doc = await analyzer.analyze(['base.js']);\n      assert.deepEqual(b2Doc.getWarnings(), []);\n      const u2Doc = await analyzer.analyze(['user.html']);\n      assert.notEqual(u1Doc, u2Doc);\n      assert.equal(\n          u2Doc.getWarnings()[0].message,\n          'Could not resolve reference to class');\n\n      inMemoryOverlay.urlContentsMap.set(analyzer.resolveUrl('base.js')!, `\n        class BaseElement extends HTMLElement {}\n        customElements.define('base-elem', BaseElement);\n      `);\n      analyzer.filesChanged(['base.js']);\n      const b3Doc = await analyzer.analyze(['base.js']);\n      assert.deepEqual(b3Doc.getWarnings(), []);\n      const u3Doc = await analyzer.analyze(['user.html']);\n      assert.equal(u3Doc.getWarnings().length, 0);\n    });\n\n    class RacyUrlLoader implements UrlLoader {\n      constructor(\n          public pathToContentsMap: Map<string, string>,\n          private waitFunction: () => Promise<void>) {\n      }\n      canLoad() {\n        return true;\n      }\n      async load(path: string) {\n        await this.waitFunction();\n        const contents = this.pathToContentsMap.get(path);\n        if (contents != null) {\n          return contents;\n        }\n        throw new Error(`no known contents for ${path}`);\n      }\n    }\n\n    const editorSimulator = async (waitFn: () => Promise<void>) => {\n      // Here we're simulating a lot of noop-changes to base.html,\n      // which has\n      // two imports, which mutually import a common dep. This\n      // stresses the\n      // analyzer's caching.\n\n      const urlResolver = new PackageUrlResolver();\n      const entries: [string, string][] = [\n        [\n          'base.html',\n          `<link rel=\"import\" href=\"a.html\">\\n<link rel=\"import\" href=\"b.html\">`\n        ],\n        ['a.html', `<link rel=\"import\" href=\"common.html\">`],\n        ['b.html', `<link rel=\"import\" href=\"common.html\">`],\n        ['common.html', `<custom-el></custom-el>`],\n      ];\n      const contentsMap = new Map<ResolvedUrl, string>();\n      const analyzer = new Analyzer(\n          {urlLoader: new RacyUrlLoader(contentsMap, waitFn), urlResolver});\n      for (const [key, value] of entries) {\n        contentsMap.set(analyzer.resolveUrl(key)!, value);\n      }\n      const promises: Promise<Document>[] = [];\n      const intermediatePromises: Promise<void>[] = [];\n      for (let i = 0; i < 1; i++) {\n        await waitFn();\n        for (const entry of contentsMap) {\n          // Randomly edit some files.\n          const path = entry[0];\n          if (Math.random() > 0.5) {\n            analyzer.filesChanged([path]);\n            analyzer.analyze([path]);\n            if (Math.random() > 0.5) {\n              analyzer.filesChanged([path]);\n              const p = analyzer.analyze([path]);\n              const cacheContext = await getContext(analyzer);\n              intermediatePromises.push((async () => {\n                await p;\n                const docs = Array.from(\n                    cacheContext['_cache'].analyzedDocuments.values());\n                assert.isTrue(new Set(docs.map((d) => d.url).sort())\n                                  .has(path as ResolvedUrl));\n              })());\n            }\n          }\n          promises.push(analyzeDocument('base.html', analyzer));\n          await Promise.all(promises);\n        }\n        // Analyze the base file\n        promises.push(analyzeDocument('base.html', analyzer));\n        await Promise.all(promises);\n      }\n      // Assert that all edits went through fine.\n      await Promise.all(intermediatePromises);\n      // Assert that the every analysis of 'base.html' after each\n      // batch of edits\n      // was correct, and doesn't have missing or inconsistent\n      // results.\n      const documents = await Promise.all(promises);\n      for (const document of documents) {\n        assert.deepEqual(document.url, analyzer.resolveUrl('base.html'));\n        const localFeatures = document.getFeatures({imported: false});\n        const kinds = Array.from(localFeatures).map((f) => Array.from(f.kinds));\n        const message = `localFeatures: ${\n            JSON.stringify(\n                Array.from(localFeatures).map((f) => ({\n                                                kinds: Array.from(f.kinds),\n                                                ids: Array.from(f.identifiers)\n                                              })))}`;\n        assert.deepEqual(\n            kinds,\n            [\n              ['document', 'html-document'],\n              ['import', 'html-import'],\n              ['import', 'html-import']\n            ],\n            message);\n        const imports =\n            Array.from(document.getFeatures({kind: 'import', imported: true}));\n        assert.sameMembers(\n            imports.map((m) => m.url),\n            ['a.html', 'b.html', 'common.html', 'common.html'].map(\n                (u) => analyzer.resolveUrl(u)));\n        const docs = Array.from(\n            document.getFeatures({kind: 'document', imported: true}));\n        assert.sameMembers(\n            docs.map((d) => d.url),\n            ['a.html', 'b.html', 'base.html', 'common.html'].map(\n                (u) => analyzer.resolveUrl(u)));\n        const refs = Array.from(\n            document.getFeatures({kind: 'element-reference', imported: true}));\n        assert.sameMembers(refs.map((ref) => ref.tagName), ['custom-el']);\n      }\n    };\n\n    test('editor simulator of imports that import a common dep', async () => {\n      const waitTimes: number[] = [];\n      const randomWait = () => new Promise<void>((resolve) => {\n        const waitTime = Math.random() * 30;\n        waitTimes.push(waitTime);\n        setTimeout(resolve, waitTime);\n      });\n      try {\n        await editorSimulator(randomWait);\n      } catch (err) {\n        console.error('Wait times to reproduce this failure:');\n        console.error(JSON.stringify(waitTimes));\n        throw err;\n      }\n    });\n\n    /**\n     * This is a tool for reproducing and debugging a failure of the\n     * editor\n     * simulator test above, but only at the exact same commit, as\n     * it's\n     * sensitive to the order of internal operations of the analyzer.\n     * So this\n     * code with a defined list of wait times should not be checked\n     * in.\n     *\n     * It's also worth noting that this code will be dependent on many\n     * other\n     * system factors, so it's only somewhat more reproducible, and\n     * may not\n     * end\n     * up being very useful. If it isn't, we should delete it.\n     */\n    test.skip('somewhat more reproducable editor simulator', async () => {\n      // Replace waitTimes' value with the array of wait times\n      // that's logged\n      // to the console when the random editor test fails.\n      const waitTimes: number[] = [];\n\n      const reproducableWait = () => new Promise<void>((resolve) => {\n        const waitTime = waitTimes.shift();\n        if (waitTime == null) {\n          throw new Error(\n              'Was asked for more random waits than the ' +\n              'given array of wait times');\n        }\n        setTimeout(resolve, waitTime);\n      });\n      await editorSimulator(reproducableWait);\n    });\n\n    suite('deterministic tests', () => {\n      // Deterministic tests extracted from various failures of the\n      // above\n      // random\n      // test.\n\n      /**\n       * This is an asynchronous keyed queue, useful for controlling\n       * the\n       * order\n       * of results in order to make tests more deterministic.\n       *\n       * It's intended to be used in fake loaders, scanners, etc,\n       * where the\n       * test\n       * provides the intended result on a file by file basis, with\n       * control\n       * over\n       * the order in which the results come in.\n       */\n      class KeyedQueue<Key, Result> {\n        private _requests = new Map<Key, Deferred<Result>[]>();\n        private _results = new Map<Key, Result[]>();\n\n        async request(key: Key): Promise<Result> {\n          const results = this._results.get(key) || [];\n          if (results.length > 0) {\n            return results.shift()!;\n          }\n          const deferred = new Deferred<Result>();\n          const deferreds = this._requests.get(key) || [];\n          this._requests.set(key, deferreds);\n          deferreds.push(deferred);\n          return deferred.promise;\n        }\n\n        /**\n         * Resolves the next unfulfilled request for the given key\n         * with the\n         * given value.\n         */\n        resolve(key: Key, value: Result) {\n          const requests = this._requests.get(key) || [];\n          if (requests.length > 0) {\n            const request = requests.shift()!;\n            request.resolve(value);\n            return;\n          }\n          const results = this._results.get(key) || [];\n          this._results.set(key, results);\n          results.push(value);\n        }\n\n        toString() {\n          return JSON.stringify({\n            openRequests: Array.from(this._requests.keys()),\n            openResponses: Array.from(this._results.keys())\n          });\n        }\n      }\n\n      class DeterministicUrlLoader implements UrlLoader {\n        queue = new KeyedQueue<ResolvedUrl, string>();\n        canLoad(_url: ResolvedUrl) {\n          return true;\n        }\n\n        async load(url: ResolvedUrl) {\n          return this.queue.request(url);\n        }\n      }\n\n      class NoopUrlLoader implements UrlLoader {\n        canLoad() {\n          return true;\n        }\n        async load(): Promise<string> {\n          throw new Error(\n              `Noop Url Loader isn't supposed to be actually called.`);\n        }\n      }\n\n      /**\n       * This crashed the analyzer as there was a race to\n       * _makeDocument,\n       * violating its constraint that there not already be a resolved\n       * Document\n       * for a given path.\n       *\n       * This test came out of debugging this issue:\n       *     https://github.com/Polymer/polymer-analyzer/issues/406\n       */\n      test('two edits of the same file back to back', async () => {\n        const overlay = new InMemoryOverlayUrlLoader(new NoopUrlLoader);\n        const analyzer = new Analyzer({urlLoader: overlay});\n\n        overlay.urlContentsMap.set(analyzer.resolveUrl('leaf.html')!, 'Hello');\n        const p1 = analyzer.analyze(['leaf.html']);\n        overlay.urlContentsMap.set(analyzer.resolveUrl('leaf.html')!, 'World');\n        analyzer.filesChanged(['leaf.html']);\n        const p2 = analyzer.analyze(['leaf.html']);\n        await Promise.all([p1, p2]);\n      });\n\n      test('handles a shared dependency', async () => {\n        const initialPaths =\n            ['static/diamond/a.html', 'static/diamond/root.html'];\n        let result = await analyzer.analyze(initialPaths);\n\n        const resultA = result.getDocument(initialPaths[0]);\n        if (!resultA.successful) {\n          throw new Error(`Could not get document a`);\n        }\n        inMemoryOverlay.urlContentsMap.set(\n            analyzer.resolveUrl('static/diamond/a.html')!,\n            resultA.value.parsedDocument.contents);\n        await analyzer.filesChanged(['static/diamond/a.html']);\n        result = await analyzer.analyze(initialPaths);\n\n        const rootResult = result.getDocument(initialPaths[1]);\n        if (!rootResult.successful) {\n          throw new Error(`Could not get root document`);\n        }\n        const localFeatures = rootResult.value.getFeatures({imported: false});\n        const kinds = Array.from(localFeatures).map((f) => Array.from(f.kinds));\n        assert.deepEqual(kinds, [\n          ['document', 'html-document'],\n          ['import', 'html-import'],\n          ['import', 'html-import']\n        ]);\n      });\n\n      test('all files in a cycle wait for the whole cycle', async () => {\n        const loader = new DeterministicUrlLoader();\n        const analyzer = new Analyzer({urlLoader: loader});\n        const aAnalyzed = analyzer.analyze(['a.html']);\n        const bAnalyzed = analyzer.analyze(['b.html']);\n\n        loader.queue.resolve(\n            analyzer.resolveUrl('a.html')!, `<link rel=\"import\" href=\"b.html\">\n            <link rel=\"import\" href=\"c.html\">`);\n        loader.queue.resolve(\n            analyzer.resolveUrl('b.html')!,\n            `<link rel=\"import\" href=\"a.html\">`);\n\n        let cResolved = false;\n        // Analysis shouldn't finish without c.html resolving\n        const aAnalyzedDone = aAnalyzed.then(() => {\n          assert.isTrue(cResolved);\n        });\n        const bAnalyzedDone = bAnalyzed.then(() => {\n          assert.isTrue(cResolved);\n        });\n        // flush the microtask queue\n        await Promise.resolve();\n        cResolved = true;\n        loader.queue.resolve(analyzer.resolveUrl('c.html')!, '');\n        // wait for the callback above to complete\n        await Promise.all([aAnalyzedDone, bAnalyzedDone]);\n      });\n\n      test('analyzes multiple imports of the same behavior', async () => {\n        const documentA = await analyzer.analyze(\n            ['static/multiple-behavior-imports/element-a.html']);\n        const documentB = await analyzer.analyze(\n            ['static/multiple-behavior-imports/element-b.html']);\n        assert.deepEqual(documentA.getWarnings({imported: true}), []);\n        assert.deepEqual(documentB.getWarnings({imported: true}), []);\n      });\n\n      const testName =\n          'analyzes multiple imports of the same behavior simultaneously';\n      test(testName, async () => {\n        const result = await Promise.all([\n          analyzer.analyze(['static/multiple-behavior-imports/element-a.html']),\n          analyzer.analyze(['static/multiple-behavior-imports/element-b.html'])\n        ]);\n        const documentA = result[0];\n        const documentB = result[1];\n        assert.deepEqual(documentA.getWarnings({imported: true}), []);\n        assert.deepEqual(documentB.getWarnings({imported: true}), []);\n      });\n    });\n  });\n});\n\nasync function getContext(analyzer: Analyzer) {\n  return await analyzer['_analysisComplete'];\n}\n"]}