{"version":3,"sources":["../src/test/url-loader/package-url-resolver_test.ts"],"names":[],"mappings":"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","file":"package-url-resolver_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {assert} from 'chai';\n\nimport {PackageRelativeUrl} from '../../index';\nimport {PackageUrlResolver} from '../../url-loader/package-url-resolver';\nimport {fileRelativeUrl, packageRelativeUrl, resolvedUrl, rootedFileUrl} from '../test-utils';\n\nsuite('PackageUrlResolver', function() {\n  suite('resolve', () => {\n    let resolver: PackageUrlResolver;\n    setup(() => {\n      resolver = new PackageUrlResolver({packageDir: `/1/2`});\n    });\n    test(`resolves file:// urls to themselves`, () => {\n      const r = new PackageUrlResolver();\n      assert.equal(\n          r.resolve(\n              resolvedUrl`https://example.com/bar`,\n              fileRelativeUrl`file:///foo/bar/baz`),\n          resolvedUrl`file:///foo/bar/baz`);\n    });\n\n    // test for url with host but not protocol\n    test('resolves an in-package URL', () => {\n      assert.equal(\n          resolver.resolve(packageRelativeUrl`foo.html`),\n          rootedFileUrl`1/2/foo.html`);\n      assert.equal(\n          resolver.resolve(packageRelativeUrl`/foo.html`),\n          rootedFileUrl`1/2/foo.html`);\n      assert.equal(\n          resolver.resolve(packageRelativeUrl`./foo.html`),\n          rootedFileUrl`1/2/foo.html`);\n    });\n\n    test(`resolves sibling URLs to the component dir`, () => {\n      assert.equal(\n          resolver.resolve(packageRelativeUrl`../foo/foo.html`),\n          rootedFileUrl`1/2/bower_components/foo/foo.html`);\n\n      const configured = new PackageUrlResolver(\n          {componentDir: 'components', packageDir: '/1/2/'});\n      assert.equal(\n          configured.resolve(\n              // tslint:disable-next-line: no-any\n              (rootedFileUrl`1/bar/bar.html`) as any as PackageRelativeUrl),\n          rootedFileUrl`1/2/components/bar/bar.html`);\n    });\n\n    test('resolves sibling with matching name prefix to component dir', () => {\n      // Regression test for bug in path containment check.\n      const configured =\n          new PackageUrlResolver({packageDir: '/repos/iron-icons'});\n      assert.equal(\n        configured.resolve(\n              // tslint:disable-next-line: no-any\n              rootedFileUrl`repos/iron-iconset-svg/foo.html` as any as\n              PackageRelativeUrl),\n          rootedFileUrl\n          `repos/iron-icons/bower_components/iron-iconset-svg/foo.html`);\n    });\n\n    test('resolves cousin URLs as normal', () => {\n      assert.equal(\n          resolver.resolve(packageRelativeUrl`../../foo/foo.html`),\n          rootedFileUrl`foo/foo.html`);\n    });\n\n    test('passes URLs with unknown hostnames through untouched', () => {\n      const r = new PackageUrlResolver();\n      assert.equal(\n          r.resolve(packageRelativeUrl`http://abc.xyz/foo.html`),\n          resolvedUrl`http://abc.xyz/foo.html`);\n\n      assert.equal(\n          r.resolve(\n              resolvedUrl`https://baz.com/qux.js`,\n              fileRelativeUrl`https://foo.com/bar.html`),\n          resolvedUrl`https://foo.com/bar.html`);\n    });\n\n    test('resolves protocol-relative URLs using default protocol', () => {\n      const r = new PackageUrlResolver({packageDir: `/1/2`, host: 'foo.com'});\n      assert.equal(\n          r.resolve(packageRelativeUrl`//abc.xyz/foo.html`),\n          resolvedUrl`https://abc.xyz/foo.html`);\n\n      assert.equal(\n          r.resolve(\n              rootedFileUrl`1/2/bar.html`, fileRelativeUrl`//abc.xyz/foo.html`),\n          resolvedUrl`https://abc.xyz/foo.html`);\n\n      assert.equal(\n          r.resolve(\n              rootedFileUrl`1/2/bar.html`, fileRelativeUrl`//foo.com/baz.html`),\n          rootedFileUrl`1/2/baz.html`);\n    });\n\n    test('resolves protocol-relative URLs using provided protocol', () => {\n      const r = new PackageUrlResolver(\n          {protocol: 'potato', packageDir: `/1/2`, host: 'foo.com'});\n\n      assert.equal(\n          r.resolve(packageRelativeUrl`//foo.com/bar.html`),\n          rootedFileUrl`1/2/bar.html`,\n          'host matches resolver, resolve to file URL');\n\n      assert.equal(\n          r.resolve(packageRelativeUrl`//abc.xyz/foo.html`),\n          resolvedUrl`potato://abc.xyz/foo.html`,\n          'host does not match resolver, resolve with protocol option');\n\n      assert.equal(\n          r.resolve(\n              resolvedUrl`spaghetti://abc.xyz/foo.html`,\n              fileRelativeUrl`//foo.com/bar.html`),\n          rootedFileUrl`1/2/bar.html`,\n          'host matches resolver, resolve as file URL');\n\n      assert.equal(\n          r.resolve(\n              resolvedUrl`spaghetti://abc.xyz/foo.html`,\n              fileRelativeUrl`//abc.xyz/foo.html`),\n          resolvedUrl`spaghetti://abc.xyz/foo.html`,\n          'host does not match resolver, inherit non-file protocol from base URL');\n\n      assert.equal(\n          r.resolve(\n              rootedFileUrl`1/2/bar.html`, fileRelativeUrl`//abc.xyz/foo.html`),\n          resolvedUrl`potato://abc.xyz/foo.html`,\n          'host does not match resolver, do not inherit file protocol from base URL');\n\n      assert.equal(\n          r.resolve(\n              resolvedUrl`spaghetti://example.com/`,\n              fileRelativeUrl`//abc.xyz/foo.html`),\n          resolvedUrl`spaghetti://abc.xyz/foo.html`,\n          'host does not match resolver, inherit non-file protocol from base URL');\n    });\n\n    test(`resolves a URL with the right hostname`, () => {\n      const resolver = new PackageUrlResolver(\n          {componentDir: `components`, host: `abc.xyz`, packageDir: `/1/2`});\n      assert.equal(\n          resolver.resolve(packageRelativeUrl`http://abc.xyz/foo.html`),\n          rootedFileUrl`1/2/foo.html`);\n      assert.equal(\n          resolver.resolve(packageRelativeUrl`http://abc.xyz/./foo.html`),\n          rootedFileUrl`1/2/foo.html`);\n      assert.equal(\n          resolver.resolve(packageRelativeUrl`http://abc.xyz/../foo.html`),\n          rootedFileUrl`1/2/foo.html`);\n      assert.equal(\n          resolver.resolve(packageRelativeUrl`http://abc.xyz/foo/../foo.html`),\n          rootedFileUrl`1/2/foo.html`);\n\n      assert.equal(\n          resolver.resolve(packageRelativeUrl`foo.html`),\n          rootedFileUrl`1/2/foo.html`);\n      assert.equal(\n          resolver.resolve(packageRelativeUrl`./foo.html`),\n          rootedFileUrl`1/2/foo.html`);\n      assert.equal(\n          resolver.resolve(packageRelativeUrl`foo/../foo.html`),\n          rootedFileUrl`1/2/foo.html`);\n\n      assert.equal(\n          resolver.resolve(packageRelativeUrl`/foo.html`),\n          rootedFileUrl`1/2/foo.html`);\n      assert.equal(\n          resolver.resolve(packageRelativeUrl`/./foo.html`),\n          rootedFileUrl`1/2/foo.html`);\n      assert.equal(\n          resolver.resolve(packageRelativeUrl`/../foo/foo.html`),\n          rootedFileUrl`1/2/foo/foo.html`);\n      assert.equal(\n          resolver.resolve(packageRelativeUrl`/foo/../foo.html`),\n          rootedFileUrl`1/2/foo.html`);\n    });\n\n    test(`resolves a URL with spaces`, () => {\n      assert.equal(\n          resolver.resolve(packageRelativeUrl`spaced name.html`),\n          rootedFileUrl`1/2/spaced%20name.html`);\n    });\n\n    test('resolves an undecodable URL to undefined', () => {\n      assert.equal(resolver.resolve(packageRelativeUrl`%><><%=`), undefined);\n    });\n\n    test('resolves a relative URL containing querystring and fragment', () => {\n      assert.equal(\n          resolver.resolve(\n              rootedFileUrl`1/2/foo.html?bar`, fileRelativeUrl`foo.html#bat`),\n          rootedFileUrl`1/2/foo.html#bat`);\n      assert.equal(\n          resolver.resolve(packageRelativeUrl`foo.html?baz#bat`),\n          rootedFileUrl`1/2/foo.html?baz#bat`);\n      assert.equal(\n          resolver.resolve(\n              rootedFileUrl`1/2/bar/baz/`, fileRelativeUrl`foo.html?baz#bat`),\n          rootedFileUrl`1/2/bar/baz/foo.html?baz#bat`);\n    });\n\n    test('resolves a URL with no pathname', () => {\n      assert.equal(\n          resolver.resolve(rootedFileUrl`1/2/foo.html`, fileRelativeUrl``),\n          rootedFileUrl`1/2/foo.html`);\n      assert.equal(\n          resolver.resolve(\n              rootedFileUrl`1/2/foo.html?baz#bat`, fileRelativeUrl``),\n          rootedFileUrl`1/2/foo.html?baz`);\n      assert.equal(\n          resolver.resolve(rootedFileUrl`1/2/foo.html`, fileRelativeUrl`#buz`),\n          rootedFileUrl`1/2/foo.html#buz`);\n      assert.equal(\n          resolver.resolve(\n              rootedFileUrl`1/2/foo.html?baz#bat`, fileRelativeUrl`#buz`),\n          rootedFileUrl`1/2/foo.html?baz#buz`);\n      assert.equal(\n          resolver.resolve(\n              rootedFileUrl`1/2/foo.html?bar#buz`, fileRelativeUrl`?fiz`),\n          rootedFileUrl`1/2/foo.html?fiz`);\n      assert.equal(\n          resolver.resolve(\n              rootedFileUrl`1/2/foo.html`, fileRelativeUrl`?fiz#buz`),\n          rootedFileUrl`1/2/foo.html?fiz#buz`);\n      assert.equal(\n          resolver.resolve(\n              rootedFileUrl`1/2/foo.html?bar`, fileRelativeUrl`?fiz#buz`),\n          rootedFileUrl`1/2/foo.html?fiz#buz`);\n    });\n  });\n\n  suite('relative', () => {\n    // We want process.cwd so that on Windows we test Windows paths and on\n    // posix we test posix paths.\n    const resolver = new PackageUrlResolver({packageDir: process.cwd()});\n    function relative(from: string, to: string) {\n      const fromResolved = resolver.resolve(from as PackageRelativeUrl)!;\n      const toResolved = resolver.resolve(to as PackageRelativeUrl)!;\n      const result = resolver.relative(fromResolved, toResolved);\n\n      return result;\n    }\n\n    test('can get relative urls between urls', () => {\n      assert.equal(relative('/', '/'), '');\n      assert.equal(relative('/', '/bar/'), 'bar/');\n      assert.equal(relative('/foo/', '/foo/'), '');\n      assert.equal(relative('/foo/', '/bar/'), '../bar/');\n      assert.equal(relative('foo/', '/'), '../');\n      assert.equal(relative('foo.html', 'foo.html'), '');\n      assert.equal(relative('foo/', 'bar/'), '../bar/');\n      assert.equal(relative('foo.html', 'bar.html'), 'bar.html');\n      assert.equal(relative('sub/foo.html', 'bar.html'), '../bar.html');\n      assert.equal(\n          relative('sub1/foo.html', 'sub2/bar.html'), '../sub2/bar.html');\n      assert.equal(relative('foo.html', 'sub/bar.html'), 'sub/bar.html');\n      assert.equal(relative('./foo.html', './sub/bar.html'), 'sub/bar.html');\n      assert.equal(relative('./foo.html', './bar.html'), 'bar.html');\n      assert.equal(relative('./foo/', 'sub/bar.html'), '../sub/bar.html');\n      assert.equal(relative('./foo/bonk.html', 'sub/bar/'), '../sub/bar/');\n    });\n\n    test('will keep absolute urls absolute', () => {\n      assert.equal(\n          relative('foo/', 'http://example.com'), 'http://example.com/');\n      assert.equal(\n          relative('foo/', 'https://example.com'), 'https://example.com/');\n      assert.equal(\n          relative('foo/', 'file://host/path/to/file'),\n          'file://host/path/to/file');\n    });\n\n    test('sibling urls work properly', () => {\n      // Our basedir, into our dependencies.\n      assert.equal(relative('foo.html', '../bar/bar.html'), '../bar/bar.html');\n      // Our subdir, into dependencies\n      assert.equal(\n          relative('foo/foo.html', '../bar/bar.html'), '../../bar/bar.html');\n      // From one dependency to another\n      assert.equal(\n          relative('../foo/foo.html', '../bar/bar.html'), '../bar/bar.html');\n    });\n  });\n});\n"]}