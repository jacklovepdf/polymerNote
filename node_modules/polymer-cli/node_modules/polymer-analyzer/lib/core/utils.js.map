{"version":3,"sources":["../src/core/utils.ts"],"names":[],"mappings":"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","file":"utils.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {parse as parseUrl_, resolve as resolveUrl_, Url} from 'url';\n\nconst unspecifiedProtocol = '-';\nexport function parseUrl(\n    url: string, defaultProtocol: string = unspecifiedProtocol): Url {\n  const urlObject = parseUrl_(ensureProtocol(url, defaultProtocol));\n  if (urlObject.protocol &&\n      urlObject.protocol.slice(0, -1) === unspecifiedProtocol) {\n    urlObject.protocol = undefined;\n    urlObject.href =\n        urlObject.href && urlObject.href.slice(unspecifiedProtocol.length + 1);\n  }\n  return urlObject;\n}\n\nexport function ensureProtocol(url: string, defaultProtocol: string): string {\n  return url.startsWith('//') ? `${defaultProtocol}:${url}` : url;\n}\n\nexport function resolveUrl(\n    baseUrl: string, targetUrl: string, defaultProtocol: string): string {\n  const baseProtocol = (parseUrl_(baseUrl).protocol || '').slice(0, -1);\n  const protocol = baseProtocol !== 'file' && baseProtocol || defaultProtocol;\n  return resolveUrl_(\n      ensureProtocol(baseUrl, protocol), ensureProtocol(targetUrl, protocol));\n}\n\nexport function trimLeft(str: string, char: string): string {\n  let leftEdge = 0;\n  while (str[leftEdge] === char) {\n    leftEdge++;\n  }\n  return str.substring(leftEdge);\n}\n\nexport class Deferred<T> {\n  promise: Promise<T>;\n  resolve!: (result: T) => void;\n  reject!: (error: {}|undefined|null) => void;\n  resolved = false;\n  rejected = false;\n  error: {}|undefined|null;\n\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (result: T) => {\n        if (this.resolved) {\n          throw new Error('Already resolved');\n        }\n        if (this.rejected) {\n          throw new Error('Already rejected');\n        }\n        this.resolved = true;\n        resolve(result);\n      };\n      this.reject = (error: Error) => {\n        if (this.resolved) {\n          throw new Error('Already resolved');\n        }\n        if (this.rejected) {\n          throw new Error('Already rejected');\n        }\n        this.rejected = true;\n        this.error = error;\n        reject(error);\n      };\n    });\n  }\n\n  toNodeCallback() {\n    return (error: {}|null|undefined, value: T) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n    };\n  }\n}\n\nexport function addAll<T>(set1: Set<T>, set2: Set<T>): Set<T> {\n  for (const val of set2) {\n    set1.add(val);\n  }\n  return set1;\n}\n"]}