{"version":3,"sources":["../src/model/import.ts"],"names":[],"mappings":"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","file":"import.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Document} from './document';\nimport {Feature} from './feature';\nimport {AstNodeWithLanguage, SourceRange} from './model';\nimport {Resolvable} from './resolvable';\nimport {FileRelativeUrl, ResolvedUrl} from './url';\nimport {Severity, Warning} from './warning';\n\n\n/**\n * Represents an import, such as an HTML import, an external script or style\n * tag, or an JavaScript import.\n *\n * @template N The AST node type\n */\nexport class ScannedImport implements Resolvable {\n  readonly type: 'html-import'|'html-script'|'html-style'|'js-import'|string;\n\n  /**\n   * URL of the import, relative to the base directory.\n   */\n  url: FileRelativeUrl|undefined;\n\n  sourceRange: SourceRange|undefined;\n\n  error: {message?: string}|undefined;\n\n  /**\n   * The source range specifically for the URL or reference to the imported\n   * resource.\n   */\n  urlSourceRange: SourceRange|undefined;\n\n  astNode: AstNodeWithLanguage|undefined;\n\n  warnings: Warning[] = [];\n\n  /**\n   * If true, the imported document may not be loaded until well after the\n   * containing document has been evaluated, and indeed may never load.\n   */\n  lazy: boolean;\n\n  constructor(\n      type: string, url: FileRelativeUrl|undefined,\n      sourceRange: SourceRange|undefined, urlSourceRange: SourceRange|undefined,\n      ast: AstNodeWithLanguage|undefined, lazy: boolean) {\n    this.type = type;\n    this.url = url;\n    this.sourceRange = sourceRange;\n    this.urlSourceRange = urlSourceRange;\n    this.astNode = ast;\n    this.lazy = lazy;\n  }\n\n  resolve(document: Document): Import|undefined {\n    const resolvedUrl = this.getLoadableUrlOrWarn(document);\n    if (this.url === undefined || resolvedUrl === undefined) {\n      // Warning will already have been added to the document if necessary, so\n      // we can just return here.\n      return undefined;\n    }\n\n    const importedDocumentOrWarning =\n        document._analysisContext.getDocument(resolvedUrl);\n    let importedDocument: Document|undefined;\n    if (!(importedDocumentOrWarning instanceof Document)) {\n      this.addCouldNotLoadWarning(document, importedDocumentOrWarning);\n      importedDocument = undefined;\n    } else {\n      importedDocument = importedDocumentOrWarning;\n    }\n    return this.constructImport(\n        resolvedUrl, this.url, importedDocument, document);\n  }\n\n  protected constructImport(\n      resolvedUrl: ResolvedUrl, relativeUrl: FileRelativeUrl,\n      importedDocument: Document|undefined, _containingDocument: Document) {\n    return new Import(\n        resolvedUrl,\n        relativeUrl,\n        this.type,\n        importedDocument,\n        this.sourceRange,\n        this.urlSourceRange,\n        this.astNode,\n        this.warnings,\n        this.lazy);\n  }\n\n  protected addCouldNotLoadWarning(document: Document, warning?: Warning) {\n    const error = this.error && this.error.message || this.error ||\n        warning && warning.message || '';\n    if (error)\n      document.warnings.push(new Warning({\n        code: 'could-not-load',\n        message: `Unable to load import: ${error}`,\n        sourceRange: (this.urlSourceRange || this.sourceRange)!,\n        severity: Severity.ERROR,\n        parsedDocument: document.parsedDocument,\n      }));\n  }\n\n  /**\n   * Resolve the URL for this import and return it if the analyzer\n   */\n  protected getLoadableUrlOrWarn(document: Document): ResolvedUrl|undefined {\n    if (this.url === undefined) {\n      return;\n    }\n    const resolvedUrl = document._analysisContext.resolver.resolve(\n        document.parsedDocument.baseUrl, this.url, this);\n    if (!resolvedUrl) {\n      return;\n    }\n    if (!document._analysisContext.loader.canLoad(resolvedUrl)) {\n      // We have no way to load this resolved URL, so we will warn.\n      document.warnings.push(new Warning({\n        code: 'not-loadable',\n        message: `URL loader not configured to load '${resolvedUrl}'`,\n        sourceRange: (this.urlSourceRange || this.sourceRange)!,\n        severity: Severity.WARNING,\n        parsedDocument: document.parsedDocument,\n      }));\n      return undefined;\n    }\n    return resolvedUrl;\n  }\n}\n\ndeclare module './queryable' {\n  interface FeatureKindMap {\n    'import': Import;\n    'lazy-import': Import;\n\n    // Import specializations.\n    'html-import': Import;\n    'html-script': Import;\n    'html-style': Import;\n    'css-import': Import;\n  }\n}\n\nexport class Import implements Feature {\n  readonly type: 'html-import'|'html-script'|'html-style'|string;\n  readonly url: ResolvedUrl;\n  readonly originalUrl: FileRelativeUrl;\n  readonly document: Document|undefined;\n  readonly identifiers = new Set();\n  readonly kinds = new Set(['import']);\n  readonly sourceRange: SourceRange|undefined;\n  readonly urlSourceRange: SourceRange|undefined;\n  readonly astNode: AstNodeWithLanguage|undefined;\n  readonly warnings: Warning[];\n  readonly lazy: boolean;\n\n  constructor(\n      url: ResolvedUrl, originalUrl: FileRelativeUrl, type: string,\n      document: Document|undefined, sourceRange: SourceRange|undefined,\n      urlSourceRange: SourceRange|undefined, ast: AstNodeWithLanguage|undefined,\n      warnings: Warning[], lazy: boolean) {\n    this.url = url;\n    this.originalUrl = originalUrl;\n    this.type = type;\n    this.document = document;\n    this.kinds.add(this.type);\n    this.sourceRange = sourceRange;\n    this.urlSourceRange = urlSourceRange;\n    this.astNode = ast;\n    this.warnings = warnings;\n    this.lazy = lazy;\n    if (lazy) {\n      this.kinds.add('lazy-import');\n    }\n  }\n\n  toString() {\n    return `<Import type=\"${this.type}\" url=\"${this.url}\">`;\n  }\n}\n"]}