{"version":3,"sources":["../src/javascript/estree-visitor.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG","file":"estree-visitor.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {NodePath} from '@babel/traverse';\nimport * as babel from '@babel/types';\nimport {VisitorOption} from './estraverse-shim';\n\nexport type VisitResult = VisitorOption|null|undefined|void;\nexport type VisitorCallback<N extends babel.Node> =\n    (node: N, parent: babel.Node|undefined|null, path: NodePath<N>) =>\n        VisitResult;\n\nexport interface Visitor {\n  readonly enter?: VisitorCallback<babel.Node>;\n  readonly leave?: VisitorCallback<babel.Node>;\n  readonly enterIdentifier?: VisitorCallback<babel.Identifier>;\n  readonly leaveIdentifier?: VisitorCallback<babel.Identifier>;\n\n  readonly enterLiteral?: VisitorCallback<babel.Literal>;\n  readonly leaveLiteral?: VisitorCallback<babel.Literal>;\n\n  readonly enterProgram?: VisitorCallback<babel.Program>;\n  readonly leaveProgram?: VisitorCallback<babel.Program>;\n\n  readonly enterExpressionStatement?:\n      VisitorCallback<babel.ExpressionStatement>;\n  readonly leaveExpressionStatement?:\n      VisitorCallback<babel.ExpressionStatement>;\n\n  readonly enterBlockStatement?: VisitorCallback<babel.BlockStatement>;\n  readonly leaveBlockStatement?: VisitorCallback<babel.BlockStatement>;\n\n  readonly enterEmptyStatement?: VisitorCallback<babel.EmptyStatement>;\n  readonly leaveEmptyStatement?: VisitorCallback<babel.EmptyStatement>;\n\n  readonly enterDebuggerStatement?: VisitorCallback<babel.DebuggerStatement>;\n  readonly leaveDebuggerStatement?: VisitorCallback<babel.DebuggerStatement>;\n\n  readonly enterWithStatement?: VisitorCallback<babel.WithStatement>;\n  readonly leaveWithStatement?: VisitorCallback<babel.WithStatement>;\n\n  readonly enterReturnStatement?: VisitorCallback<babel.ReturnStatement>;\n  readonly leaveReturnStatement?: VisitorCallback<babel.ReturnStatement>;\n\n  readonly enterLabeledStatement?: VisitorCallback<babel.LabeledStatement>;\n  readonly leaveLabeledStatement?: VisitorCallback<babel.LabeledStatement>;\n\n  readonly enterBreakStatement?: VisitorCallback<babel.BreakStatement>;\n  readonly leaveBreakStatement?: VisitorCallback<babel.BreakStatement>;\n\n  readonly enterContinueStatement?: VisitorCallback<babel.ContinueStatement>;\n  readonly leaveContinueStatement?: VisitorCallback<babel.ContinueStatement>;\n\n  readonly enterIfStatement?: VisitorCallback<babel.IfStatement>;\n  readonly leaveIfStatement?: VisitorCallback<babel.IfStatement>;\n\n  readonly enterSwitchStatement?: VisitorCallback<babel.SwitchStatement>;\n  readonly leaveSwitchStatement?: VisitorCallback<babel.SwitchStatement>;\n\n  readonly enterSwitchCase?: VisitorCallback<babel.SwitchCase>;\n  readonly leaveSwitchCase?: VisitorCallback<babel.SwitchCase>;\n\n  readonly enterThrowStatement?: VisitorCallback<babel.ThrowStatement>;\n  readonly leaveThrowStatement?: VisitorCallback<babel.ThrowStatement>;\n\n  readonly enterTryStatement?: VisitorCallback<babel.TryStatement>;\n  readonly leaveTryStatement?: VisitorCallback<babel.TryStatement>;\n\n  readonly enterCatchClause?: VisitorCallback<babel.CatchClause>;\n  readonly leaveCatchClause?: VisitorCallback<babel.CatchClause>;\n\n  readonly enterWhileStatement?: VisitorCallback<babel.WhileStatement>;\n  readonly leaveWhileStatement?: VisitorCallback<babel.WhileStatement>;\n\n  readonly enterDoWhileStatement?: VisitorCallback<babel.DoWhileStatement>;\n  readonly leaveDoWhileStatement?: VisitorCallback<babel.DoWhileStatement>;\n\n  readonly enterForStatement?: VisitorCallback<babel.ForStatement>;\n  readonly leaveForStatement?: VisitorCallback<babel.ForStatement>;\n\n  readonly enterForInStatement?: VisitorCallback<babel.ForInStatement>;\n  readonly leaveForInStatement?: VisitorCallback<babel.ForInStatement>;\n\n  readonly enterForOfStatement?: VisitorCallback<babel.ForOfStatement>;\n  readonly leaveForOfStatement?: VisitorCallback<babel.ForOfStatement>;\n\n  readonly enterFunctionDeclaration?:\n      VisitorCallback<babel.FunctionDeclaration>;\n  readonly leaveFunctionDeclaration?:\n      VisitorCallback<babel.FunctionDeclaration>;\n\n  readonly enterVariableDeclaration?:\n      VisitorCallback<babel.VariableDeclaration>;\n  readonly leaveVariableDeclaration?:\n      VisitorCallback<babel.VariableDeclaration>;\n\n  readonly enterVariableDeclarator?: VisitorCallback<babel.VariableDeclarator>;\n  readonly leaveVariableDeclarator?: VisitorCallback<babel.VariableDeclarator>;\n\n  readonly enterThisExpression?: VisitorCallback<babel.ThisExpression>;\n  readonly leaveThisExpression?: VisitorCallback<babel.ThisExpression>;\n\n  readonly enterArrayExpression?: VisitorCallback<babel.ArrayExpression>;\n  readonly leaveArrayExpression?: VisitorCallback<babel.ArrayExpression>;\n\n  readonly enterObjectExpression?: VisitorCallback<babel.ObjectExpression>;\n  readonly leaveObjectExpression?: VisitorCallback<babel.ObjectExpression>;\n\n  readonly enterProperty?: VisitorCallback<babel.Property>;\n  readonly leaveProperty?: VisitorCallback<babel.Property>;\n\n  readonly enterFunctionExpression?: VisitorCallback<babel.FunctionExpression>;\n  readonly leaveFunctionExpression?: VisitorCallback<babel.FunctionExpression>;\n\n  readonly enterArrowFunctionExpression?:\n      VisitorCallback<babel.ArrowFunctionExpression>;\n  readonly leaveArrowFunctionExpression?:\n      VisitorCallback<babel.ArrowFunctionExpression>;\n\n  readonly enterYieldExpression?: VisitorCallback<babel.YieldExpression>;\n  readonly leaveYieldExpression?: VisitorCallback<babel.YieldExpression>;\n\n  readonly enterSuper?: VisitorCallback<babel.Super>;\n  readonly leaveSuper?: VisitorCallback<babel.Super>;\n\n  readonly enterUnaryExpression?: VisitorCallback<babel.UnaryExpression>;\n  readonly leaveUnaryExpression?: VisitorCallback<babel.UnaryExpression>;\n\n  readonly enterUpdateExpression?: VisitorCallback<babel.UpdateExpression>;\n  readonly leaveUpdateExpression?: VisitorCallback<babel.UpdateExpression>;\n\n  readonly enterBinaryExpression?: VisitorCallback<babel.BinaryExpression>;\n  readonly leaveBinaryExpression?: VisitorCallback<babel.BinaryExpression>;\n\n  readonly enterAssignmentExpression?:\n      VisitorCallback<babel.AssignmentExpression>;\n  readonly leaveAssignmentExpression?:\n      VisitorCallback<babel.AssignmentExpression>;\n\n  readonly enterLogicalExpression?: VisitorCallback<babel.LogicalExpression>;\n  readonly leaveLogicalExpression?: VisitorCallback<babel.LogicalExpression>;\n\n  readonly enterMemberExpression?: VisitorCallback<babel.MemberExpression>;\n  readonly leaveMemberExpression?: VisitorCallback<babel.MemberExpression>;\n\n  readonly enterConditionalExpression?:\n      VisitorCallback<babel.ConditionalExpression>;\n  readonly leaveConditionalExpression?:\n      VisitorCallback<babel.ConditionalExpression>;\n\n  readonly enterCallExpression?: VisitorCallback<babel.CallExpression>;\n  readonly leaveCallExpression?: VisitorCallback<babel.CallExpression>;\n\n  readonly enterNewExpression?: VisitorCallback<babel.NewExpression>;\n  readonly leaveNewExpression?: VisitorCallback<babel.NewExpression>;\n\n  readonly enterSequenceExpression?: VisitorCallback<babel.SequenceExpression>;\n  readonly leaveSequenceExpression?: VisitorCallback<babel.SequenceExpression>;\n\n  readonly enterTemplateLiteral?: VisitorCallback<babel.TemplateLiteral>;\n  readonly leaveTemplateLiteral?: VisitorCallback<babel.TemplateLiteral>;\n\n  readonly enterTaggedTemplateExpression?:\n      VisitorCallback<babel.TaggedTemplateExpression>;\n  readonly leaveTaggedTemplateExpression?:\n      VisitorCallback<babel.TaggedTemplateExpression>;\n\n  readonly enterTemplateElement?: VisitorCallback<babel.TemplateElement>;\n  readonly leaveTemplateElement?: VisitorCallback<babel.TemplateElement>;\n\n  readonly enterSpreadElement?: VisitorCallback<babel.SpreadElement>;\n  readonly leaveSpreadElement?: VisitorCallback<babel.SpreadElement>;\n\n  readonly enterPattern?: VisitorCallback<babel.Pattern>;\n  readonly leavePattern?: VisitorCallback<babel.Pattern>;\n\n  readonly enterAssignmentProperty?: VisitorCallback<babel.AssignmentProperty>;\n  readonly leaveAssignmentProperty?: VisitorCallback<babel.AssignmentProperty>;\n\n  readonly enterObjectPattern?: VisitorCallback<babel.ObjectPattern>;\n  readonly leaveObjectPattern?: VisitorCallback<babel.ObjectPattern>;\n\n  readonly enterObjectMethod?: VisitorCallback<babel.ObjectMethod>;\n  readonly leaveObjectMethod?: VisitorCallback<babel.ObjectMethod>;\n\n  readonly enterObjectProperty?: VisitorCallback<babel.ObjectProperty>;\n  readonly leaveObjectProperty?: VisitorCallback<babel.ObjectProperty>;\n\n  readonly enterArrayPattern?: VisitorCallback<babel.ArrayPattern>;\n  readonly leaveArrayPattern?: VisitorCallback<babel.ArrayPattern>;\n\n  readonly enterRestElement?: VisitorCallback<babel.RestElement>;\n  readonly leaveRestElement?: VisitorCallback<babel.RestElement>;\n\n  readonly enterAssignmentPattern?: VisitorCallback<babel.AssignmentPattern>;\n  readonly leaveAssignmentPattern?: VisitorCallback<babel.AssignmentPattern>;\n\n  readonly enterMethod?: VisitorCallback<babel.Method>;\n  readonly leaveMethod?: VisitorCallback<babel.Method>;\n\n  readonly enterClassMethod?: VisitorCallback<babel.ClassMethod>;\n  readonly leaveClassMethod?: VisitorCallback<babel.ClassMethod>;\n\n  readonly enterClassDeclaration?: VisitorCallback<babel.ClassDeclaration>;\n  readonly leaveClassDeclaration?: VisitorCallback<babel.ClassDeclaration>;\n\n  readonly enterClassExpression?: VisitorCallback<babel.ClassExpression>;\n  readonly leaveClassExpression?: VisitorCallback<babel.ClassExpression>;\n\n  readonly enterMetaProperty?: VisitorCallback<babel.MetaProperty>;\n  readonly leaveMetaProperty?: VisitorCallback<babel.MetaProperty>;\n\n  readonly enterModuleDeclaration?: VisitorCallback<babel.ModuleDeclaration>;\n  readonly leaveModuleDeclaration?: VisitorCallback<babel.ModuleDeclaration>;\n\n  readonly enterModuleSpecifier?: VisitorCallback<babel.ModuleSpecifier>;\n  readonly leaveModuleSpecifier?: VisitorCallback<babel.ModuleSpecifier>;\n\n  readonly enterImportDeclaration?: VisitorCallback<babel.ImportDeclaration>;\n  readonly leaveImportDeclaration?: VisitorCallback<babel.ImportDeclaration>;\n\n  readonly enterImportSpecifier?: VisitorCallback<babel.ImportSpecifier>;\n  readonly leaveImportSpecifier?: VisitorCallback<babel.ImportSpecifier>;\n\n  readonly enterImportDefaultSpecifier?:\n      VisitorCallback<babel.ImportDefaultSpecifier>;\n  readonly leaveImportDefaultSpecifier?:\n      VisitorCallback<babel.ImportDefaultSpecifier>;\n\n  readonly enterImportNamespaceSpecifier?:\n      VisitorCallback<babel.ImportNamespaceSpecifier>;\n  readonly leaveImportNamespaceSpecifier?:\n      VisitorCallback<babel.ImportNamespaceSpecifier>;\n\n  readonly enterExportNamedDeclaration?:\n      VisitorCallback<babel.ExportNamedDeclaration>;\n  readonly leaveExportNamedDeclaration?:\n      VisitorCallback<babel.ExportNamedDeclaration>;\n\n  readonly enterExportSpecifier?: VisitorCallback<babel.ExportSpecifier>;\n  readonly leaveExportSpecifier?: VisitorCallback<babel.ExportSpecifier>;\n\n  readonly enterExportDefaultDeclaration?:\n      VisitorCallback<babel.ExportDefaultDeclaration>;\n  readonly leaveExportDefaultDeclaration?:\n      VisitorCallback<babel.ExportDefaultDeclaration>;\n\n  readonly enterExportAllDeclaration?:\n      VisitorCallback<babel.ExportAllDeclaration>;\n  readonly leaveExportAllDeclaration?:\n      VisitorCallback<babel.ExportAllDeclaration>;\n}\n"]}