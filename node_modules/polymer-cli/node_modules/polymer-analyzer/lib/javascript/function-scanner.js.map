{"version":3,"sources":["../src/javascript/function-scanner.ts"],"names":[],"mappings":"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","file":"function-scanner.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {NodePath} from '@babel/traverse';\nimport * as babel from '@babel/types';\nimport * as doctrine from 'doctrine';\n\nimport {Warning} from '../model/model';\nimport {comparePosition} from '../model/source-range';\n\nimport {getIdentifierName, getNamespacedIdentifier} from './ast-value';\nimport {Visitor} from './estree-visitor';\nimport {getBestComment, getOrInferPrivacy, getPropertyName, getReturnFromAnnotation, getSimpleObjectPropPaths, inferReturnFromBody} from './esutil';\nimport {ScannedFunction} from './function';\nimport {JavaScriptDocument} from './javascript-document';\nimport {JavaScriptScanner} from './javascript-scanner';\nimport * as jsdoc from './jsdoc';\n\nexport class FunctionScanner implements JavaScriptScanner {\n  async scan(\n      document: JavaScriptDocument,\n      visit: (visitor: Visitor) => Promise<void>) {\n    const visitor = new FunctionVisitor(document);\n    await visit(visitor);\n    return {\n      features: [...visitor.functions].sort(\n          (a, b) => comparePosition(a.sourceRange.start, b.sourceRange.start)),\n    };\n  }\n}\n\nclass FunctionVisitor implements Visitor {\n  readonly functions = new Set<ScannedFunction>();\n  private readonly document: JavaScriptDocument;\n  readonly warnings: Warning[] = [];\n\n  constructor(document: JavaScriptDocument) {\n    this.document = document;\n  }\n\n  /**\n   * Scan standalone function declarations.\n   */\n  enterFunctionDeclaration(\n      node: babel.FunctionDeclaration, _parent: babel.Node, path: NodePath) {\n    this.initFunction(node, path, getIdentifierName(node.id));\n  }\n\n  /**\n   * Scan object method declarations.\n   */\n  enterObjectMethod(\n      node: babel.ObjectMethod, _parent: babel.Node, path: NodePath) {\n    this.initFunction(node, path, getIdentifierName(node.key));\n  }\n\n  /**\n   * Scan functions assigned to newly declared variables.\n   */\n  enterVariableDeclaration(\n      node: babel.VariableDeclaration, _parent: babel.Node, path: NodePath) {\n    if (node.declarations.length !== 1) {\n      return;  // Ambiguous.\n    }\n    const declaration = node.declarations[0];\n    const declarationValue = declaration.init;\n    if (declarationValue && babel.isFunction(declarationValue)) {\n      this.initFunction(\n          declarationValue, path, getIdentifierName(declaration.id));\n    }\n  }\n\n  /**\n   * Scan functions assigned to variables and object properties.\n   */\n  enterAssignmentExpression(\n      node: babel.AssignmentExpression, _parent: babel.Node, path: NodePath) {\n    if (babel.isFunction(node.right)) {\n      this.initFunction(node.right, path, getIdentifierName(node.left));\n    }\n  }\n\n  /**\n   * Scan functions defined inside of object literals.\n   */\n  enterObjectExpression(\n      _node: babel.ObjectExpression, _parent: babel.Node,\n      path: NodePath<babel.ObjectExpression>) {\n    for (const propPath of getSimpleObjectPropPaths(path)) {\n      const prop = propPath.node;\n      const propValue = prop.value;\n      const name = getPropertyName(prop);\n      if (babel.isFunction(propValue)) {\n        this.initFunction(propValue, propPath, name);\n        continue;\n      }\n      const comment = getBestComment(propPath) || '';\n      const docs = jsdoc.parseJsdoc(comment);\n      if (jsdoc.getTag(docs, 'function')) {\n        this.initFunction(prop, propPath, name);\n        continue;\n      }\n    }\n  }\n\n  private initFunction(\n      node: babel.Function|babel.ObjectProperty, path: NodePath,\n      analyzedName?: string) {\n    const docs = jsdoc.parseJsdoc(getBestComment(path) || '');\n\n\n    // The @function annotation can override the name.\n    const functionTag = jsdoc.getTag(docs, 'function');\n    if (functionTag && functionTag.name) {\n      analyzedName = functionTag.name;\n    }\n\n    if (!analyzedName) {\n      // TODO(fks): Propagate a warning if name could not be determined\n      return;\n    }\n\n    if (!jsdoc.hasTag(docs, 'global') && !jsdoc.hasTag(docs, 'memberof') &&\n        !this.isExported(path)) {\n      // Without this check we would emit a lot of functions not worthy of\n      // inclusion. Since we don't do scope analysis, we can't tell when a\n      // function is actually part of an exposed API. Only include functions\n      // that are explicitly @global, or declared as part of some namespace\n      // with @memberof.\n      return;\n    }\n\n    // TODO(justinfagnani): remove polymerMixin support\n    if (jsdoc.hasTag(docs, 'mixinFunction') ||\n        jsdoc.hasTag(docs, 'polymerMixin')) {\n      // This is a mixin, not a normal function.\n      return;\n    }\n\n    const functionName = getNamespacedIdentifier(analyzedName, docs);\n    const sourceRange = this.document.sourceRangeForNode(node)!;\n    const summaryTag = jsdoc.getTag(docs, 'summary');\n    const summary = (summaryTag && summaryTag.description) || '';\n    const description = docs.description;\n\n    let functionReturn = getReturnFromAnnotation(docs);\n    if (functionReturn === undefined && babel.isFunction(node)) {\n      functionReturn = inferReturnFromBody(node);\n    }\n\n    // TODO(justinfagnani): consolidate with similar param processing code in\n    // docs.ts\n    const functionParams: {type: string, desc: string, name: string}[] = [];\n    const templateTypes: string[] = [];\n    for (const tag of docs.tags) {\n      if (tag.title === 'param') {\n        functionParams.push({\n          type: tag.type ? doctrine.type.stringify(tag.type) : 'N/A',\n          desc: tag.description || '',\n          name: tag.name || 'N/A'\n        });\n      } else if (tag.title === 'template') {\n        for (let t of (tag.description || '').split(',')) {\n          t = t.trim();\n          if (t.length > 0) {\n            templateTypes.push(t);\n          }\n        }\n      }\n    }\n    // TODO(fks): parse params directly from `fn`, merge with docs.tags data\n\n    const specificName = functionName.slice(functionName.lastIndexOf('.') + 1);\n    this.functions.add(new ScannedFunction(\n        functionName,\n        description,\n        summary,\n        getOrInferPrivacy(specificName, docs),\n        {language: 'js', node, containingDocument: this.document},\n        docs,\n        sourceRange,\n        functionParams,\n        functionReturn,\n        templateTypes));\n  }\n\n  private isExported(path: NodePath): boolean {\n    const node = path.node;\n    if (babel.isStatement(node)) {\n      const parent = path.parent;\n      if (parent && babel.isExportDefaultDeclaration(parent) ||\n          babel.isExportNamedDeclaration(parent)) {\n        return true;\n      }\n      return false;\n    }\n    const parentPath = path.parentPath;\n    if (parentPath == null) {\n      return false;\n    }\n    return this.isExported(parentPath);\n  }\n}\n"]}