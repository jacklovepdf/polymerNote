{"version":3,"sources":["../src/javascript/javascript-export-scanner.ts"],"names":[],"mappings":"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","file":"javascript-export-scanner.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {NodePath} from '@babel/traverse';\nimport * as babel from '@babel/types';\n\nimport {Document, Feature, JsAstNode, SourceRange, Warning} from '../model/model';\nimport {Resolvable} from '../model/resolvable';\n\nimport {Visitor} from './estree-visitor';\nimport * as esutil from './esutil';\nimport {JavaScriptDocument} from './javascript-document';\nimport {JavaScriptScanner} from './javascript-scanner';\n\nexport type ExportNode = babel.ExportNamedDeclaration|\n                         babel.ExportAllDeclaration|\n                         babel.ExportDefaultDeclaration;\n\n\ndeclare module '../model/queryable' {\n  interface FeatureKindMap {\n    'export': Export;\n  }\n}\n\nconst exportKinds: ReadonlySet<string> = new Set(['export']);\nexport class Export implements Resolvable, Feature {\n  readonly kinds = exportKinds;\n  readonly identifiers = new Set<string>();\n  readonly description: undefined;\n  readonly jsdoc: undefined;\n  readonly sourceRange: SourceRange|undefined;\n  readonly astNodePath: NodePath<babel.Node>;\n  readonly astNode: JsAstNode<ExportNode>;\n  readonly statementAst: babel.Statement;\n  readonly warnings: ReadonlyArray<Warning> = [];\n\n  constructor(\n      astNode: JsAstNode<ExportNode>, statementAst: babel.Statement,\n      sourceRange: SourceRange|undefined, nodePath: NodePath<babel.Node>,\n      exportingAllFrom?: Iterable<Export>) {\n    this.astNode = astNode;\n    this.statementAst = statementAst;\n    let exportedIdentifiers;\n    if (exportingAllFrom !== undefined) {\n      exportedIdentifiers = flatMap(\n          exportingAllFrom,\n          (export_) => [...export_.identifiers].filter((i) => i !== 'default'));\n    } else {\n      exportedIdentifiers = esutil.getBindingNamesFromDeclaration(astNode.node);\n    }\n    for (const name of exportedIdentifiers) {\n      this.identifiers.add(name);\n    }\n\n    this.astNodePath = nodePath;\n    this.sourceRange = sourceRange;\n  }\n\n  // TODO: Could potentially get a speed boost by doing the Reference\n  //   resolution algorithm here, rather than re-doing it every single place\n  //   this export is referenced.\n  resolve(document: Document): Feature|undefined {\n    if (babel.isExportAllDeclaration(this.astNode.node)) {\n      const [import_] =\n          document.getFeatures({kind: 'import', statement: this.statementAst});\n      if (import_ === undefined || import_.document === undefined) {\n        // Import did not resolve.\n        return undefined;\n      }\n\n      return new Export(\n          this.astNode,\n          this.statementAst,\n          this.sourceRange,\n          this.astNodePath,\n          import_.document.getFeatures({kind: 'export'}));\n    }\n    // It's immutable, and it doesn't care about other documents, so it's\n    // both a ScannedFeature and a Feature. This is just one step in an\n    // arbitrarily long chain of references.\n\n    return this;\n  }\n}\n\nfunction*\n    flatMap<In, Out>(inputs: Iterable<In>, map: (input: In) => Iterable<Out>):\n        Iterable<Out> {\n  for (const input of inputs) {\n    yield* map(input);\n  }\n}\n\nexport class JavaScriptExportScanner implements JavaScriptScanner {\n  async scan(\n      document: JavaScriptDocument,\n      visit: (visitor: Visitor) => Promise<void>) {\n    const exports: Export[] = [];\n    const warnings: Warning[] = [];\n\n    await visit({\n      enterExportNamedDeclaration(node, _parent, path) {\n        exports.push(new Export(\n            {language: 'js', containingDocument: document, node},\n            esutil.getCanonicalStatement(path)!,\n            document.sourceRangeForNode(node),\n            path));\n      },\n      enterExportAllDeclaration(node, _parent, path) {\n        exports.push(new Export(\n            {language: 'js', containingDocument: document, node},\n            esutil.getCanonicalStatement(path)!,\n            document.sourceRangeForNode(node),\n            path));\n      },\n      enterExportDefaultDeclaration(node, _parent, path) {\n        exports.push(new Export(\n            {language: 'js', containingDocument: document, node},\n            esutil.getCanonicalStatement(path)!,\n            document.sourceRangeForNode(node),\n            path));\n      }\n    });\n    return {features: exports, warnings};\n  }\n}\n"]}