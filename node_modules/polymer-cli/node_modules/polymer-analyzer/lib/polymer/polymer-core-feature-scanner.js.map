{"version":3,"sources":["../src/polymer/polymer-core-feature-scanner.ts"],"names":[],"mappings":"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","file":"polymer-core-feature-scanner.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as babel from '@babel/types';\n\nimport {Visitor} from '../javascript/estree-visitor';\nimport * as esutil from '../javascript/esutil';\nimport {toScannedMethod} from '../javascript/esutil';\nimport {JavaScriptDocument} from '../javascript/javascript-document';\nimport {JavaScriptScanner} from '../javascript/javascript-scanner';\nimport * as jsdoc from '../javascript/jsdoc';\nimport {Severity, Warning} from '../model/model';\n\nimport {toScannedPolymerProperty} from './js-utils';\nimport {ScannedPolymerCoreFeature} from './polymer-core-feature';\n\n/**\n * Scans for Polymer 1.x core \"features\".\n *\n * In the Polymer 1.x core library, the `Polymer.Base` prototype is dynamically\n * augmented with properties via calls to `Polymer.Base._addFeature`. These\n * calls are spread across multiple files and split between the micro, mini,\n * and standard \"feature layers\". Polymer 2.x does not use this pattern.\n *\n * Example: https://github.com/Polymer/polymer/blob/1.x/src/mini/debouncer.html\n */\nexport class PolymerCoreFeatureScanner implements JavaScriptScanner {\n  async scan(\n      document: JavaScriptDocument,\n      visit: (visitor: Visitor) => Promise<void>) {\n    const visitor = new PolymerCoreFeatureVisitor(document);\n    await visit(visitor);\n    return {features: visitor.features};\n  }\n}\n\nclass PolymerCoreFeatureVisitor implements Visitor {\n  features: ScannedPolymerCoreFeature[] = [];\n\n  constructor(private document: JavaScriptDocument) {\n  }\n\n  /**\n   * Scan for `Polymer.Base = {...}`.\n   */\n  enterAssignmentExpression(\n      assignment: babel.AssignmentExpression, parent: babel.Node) {\n    if (!babel.isMemberExpression(assignment.left) ||\n        !esutil.matchesCallExpression(assignment.left, ['Polymer', 'Base'])) {\n      return;\n    }\n\n    const parsedJsdoc =\n        jsdoc.parseJsdoc(esutil.getAttachedComment(parent) || '');\n    const feature = new ScannedPolymerCoreFeature(\n        this.document.sourceRangeForNode(assignment),\n        {node: assignment, language: 'js', containingDocument: this.document},\n        parsedJsdoc.description.trim(),\n        parsedJsdoc);\n    this.features.push(feature);\n\n    const rhs = assignment.right;\n    if (!babel.isObjectExpression(rhs)) {\n      feature.warnings.push(new Warning({\n        message: `Expected assignment to \\`Polymer.Base\\` to be an object.` +\n            `Got \\`${rhs.type}\\` instead.`,\n        severity: Severity.WARNING,\n        code: 'invalid-polymer-base-assignment',\n        sourceRange: this.document.sourceRangeForNode(assignment)!,\n        parsedDocument: this.document\n      }));\n      return;\n    }\n\n    this._scanObjectProperties(rhs, feature);\n  }\n\n  /**\n   * Scan for `addFeature({...})`.\n   */\n  enterCallExpression(call: babel.CallExpression, parent: babel.Node) {\n    if (!babel.isMemberExpression(call.callee) ||\n        !esutil.matchesCallExpression(\n            call.callee, ['Polymer', 'Base', '_addFeature'])) {\n      return;\n    }\n\n    const parsedJsdoc =\n        jsdoc.parseJsdoc(esutil.getAttachedComment(parent) || '');\n    const feature = new ScannedPolymerCoreFeature(\n        this.document.sourceRangeForNode(call),\n        {language: 'js', node: call, containingDocument: this.document},\n        parsedJsdoc.description.trim(),\n        parsedJsdoc);\n    this.features.push(feature);\n\n    if (call.arguments.length !== 1) {\n      feature.warnings.push(new Warning({\n        message:\n            `Expected only one argument to \\`Polymer.Base._addFeature\\`. ` +\n            `Got ${call.arguments.length}.`,\n        severity: Severity.WARNING,\n        code: 'invalid-polymer-core-feature-call',\n        sourceRange: this.document.sourceRangeForNode(call)!,\n        parsedDocument: this.document\n      }));\n      return;\n    }\n\n    const arg = call.arguments[0];\n    if (!babel.isObjectExpression(arg)) {\n      feature.warnings.push(new Warning({\n        message: `Expected argument to \\`Polymer.Base._addFeature\\` to be an ` +\n            `object. Got \\`${arg.type}\\` instead.`,\n        severity: Severity.WARNING,\n        code: 'invalid-polymer-core-feature-call',\n        sourceRange: this.document.sourceRangeForNode(call)!,\n        parsedDocument: this.document\n      }));\n      return;\n    }\n\n    this._scanObjectProperties(arg, feature);\n  }\n\n  /**\n   * Scan all properties of the given object expression and add them to the\n   * given feature.\n   */\n  private _scanObjectProperties(\n      obj: babel.ObjectExpression, feature: ScannedPolymerCoreFeature) {\n    for (const prop of esutil.getSimpleObjectProperties(obj)) {\n      const sourceRange = this.document.sourceRangeForNode(prop);\n      if (!sourceRange) {\n        continue;\n      }\n      if (babel.isMethod(prop) || babel.isFunction(prop.value)) {\n        const method = toScannedMethod(prop, sourceRange, this.document);\n        feature.methods.set(method.name, method);\n      } else {\n        const property =\n            toScannedPolymerProperty(prop, sourceRange, this.document);\n        if (property === undefined) {\n          continue;\n        }\n        feature.properties.set(property.name, property);\n      }\n      // TODO(aomarks) Are there any getters/setters on Polymer.Base?\n      // TODO(aomarks) Merge with similar code in polymer-element-scanner.\n    }\n  }\n}\n"]}