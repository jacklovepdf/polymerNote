{"version":3,"sources":["../src/polymer/css-import-scanner.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;;;;;;;;;AAEH,4CAA4C;AAI5C,0CAA6C;AAG7C,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;AAE1B,MAAM,eAAe,GAAG,CAAC,CAAC,GAAG,CACzB,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,EACpB,CAAC,CAAC,0BAA0B,CAAC,KAAK,EAAE,QAAQ,CAAC,EAC7C,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,EACjB,CAAC,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,EAC7B,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAEjD;IACQ,IAAI,CACN,QAA4B,EAC5B,KAA8C;;YAChD,MAAM,OAAO,GAAoB,EAAE,CAAC;YAEpC,MAAM,KAAK,CAAC,CAAC,IAAI,EAAE,EAAE;gBACnB,IAAI,eAAe,CAAC,IAAI,CAAC,EAAE;oBACzB,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAqB,CAAC;oBACjE,OAAO,CAAC,IAAI,CAAC,IAAI,qBAAa,CAC1B,YAAY,EACZ,IAAI,EACJ,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAE,EAClC,QAAQ,CAAC,4BAA4B,CAAC,IAAI,EAAE,MAAM,CAAE,EACpD,EAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,EAAE,QAAQ,EAAC,EACtD,KAAK,CAAC,CAAC,CAAC;iBACb;YACH,CAAC,CAAC,CAAC;YACH,OAAO,EAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAC,CAAC;QAC3C,CAAC;KAAA;CACF;AApBD,4CAoBC","file":"css-import-scanner.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as dom5 from 'dom5/lib/index-next';\n\nimport {HtmlVisitor, ParsedHtmlDocument} from '../html/html-document';\nimport {HtmlScanner} from '../html/html-scanner';\nimport {ScannedImport} from '../model/model';\nimport {FileRelativeUrl} from '../model/url';\n\nconst p = dom5.predicates;\n\nconst isCssImportNode = p.AND(\n    p.hasTagName('link'),\n    p.hasSpaceSeparatedAttrValue('rel', 'import'),\n    p.hasAttr('href'),\n    p.hasAttrValue('type', 'css'),\n    p.parentMatches(p.hasTagName('dom-module')));\n\nexport class CssImportScanner implements HtmlScanner {\n  async scan(\n      document: ParsedHtmlDocument,\n      visit: (visitor: HtmlVisitor) => Promise<void>) {\n    const imports: ScannedImport[] = [];\n\n    await visit((node) => {\n      if (isCssImportNode(node)) {\n        const href = dom5.getAttribute(node, 'href')! as FileRelativeUrl;\n        imports.push(new ScannedImport(\n            'css-import',\n            href,\n            document.sourceRangeForNode(node)!,\n            document.sourceRangeForAttributeValue(node, 'href')!,\n            {language: 'html', node, containingDocument: document},\n            false));\n      }\n    });\n    return {features: imports, warnings: []};\n  }\n}\n"]}