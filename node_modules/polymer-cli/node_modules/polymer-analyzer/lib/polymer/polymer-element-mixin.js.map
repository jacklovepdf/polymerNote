{"version":3,"sources":["../src/polymer/polymer-element-mixin.ts"],"names":[],"mappings":"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","file":"polymer-element-mixin.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport * as babel from '@babel/types';\n\nimport {Annotation as JsDocAnnotation} from '../javascript/jsdoc';\nimport {AstNodeWithLanguage, Class, Document, ElementMixin, Privacy, ScannedElementMixin, ScannedMethod, ScannedReference, SourceRange} from '../model/model';\n\nimport {addMethod, addProperty, getBehaviors, LocalId, Observer, PolymerExtension, PolymerProperty, ScannedPolymerExtension, ScannedPolymerProperty} from './polymer-element';\n\nexport interface Options {\n  name: string;\n  jsdoc: JsDocAnnotation;\n  description: string;\n  summary: string;\n  privacy: Privacy;\n  sourceRange: SourceRange;\n  mixins: ScannedReference<'element-mixin'>[];\n  astNode: AstNodeWithLanguage;\n  statementAst: babel.Statement|undefined;\n  classAstNode?: babel.Node;\n}\n\nexport class ScannedPolymerElementMixin extends ScannedElementMixin implements\n    ScannedPolymerExtension {\n  readonly properties: Map<string, ScannedPolymerProperty> = new Map();\n  readonly methods: Map<string, ScannedMethod> = new Map();\n  readonly staticMethods: Map<string, ScannedMethod> = new Map();\n  readonly observers: Observer[] = [];\n  readonly listeners: {event: string, handler: string}[] = [];\n  readonly behaviorAssignments: ScannedReference<'behavior'>[] = [];\n  pseudo: boolean = false;\n  readonly abstract: boolean = false;\n  readonly sourceRange: SourceRange;\n  classAstNode?: babel.Node;\n\n  constructor({\n    name,\n    jsdoc,\n    description,\n    summary,\n    privacy,\n    sourceRange,\n    mixins,\n    astNode,\n    statementAst,\n    classAstNode\n  }: Options) {\n    super({name});\n    this.jsdoc = jsdoc;\n    this.description = description;\n    this.summary = summary;\n    this.privacy = privacy;\n    this.sourceRange = sourceRange;\n    this.mixins = mixins;\n    this.astNode = astNode;\n    this.statementAst = statementAst;\n    this.classAstNode = classAstNode;\n  }\n\n  addProperty(prop: ScannedPolymerProperty) {\n    addProperty(this, prop);\n  }\n\n  addMethod(method: ScannedMethod) {\n    addMethod(this, method);\n  }\n\n  resolve(document: Document): PolymerElementMixin {\n    return new PolymerElementMixin(this, document);\n  }\n}\n\ndeclare module '../model/queryable' {\n  interface FeatureKindMap {\n    'polymer-element-mixin': PolymerElementMixin;\n  }\n}\nexport class PolymerElementMixin extends ElementMixin implements\n    PolymerExtension {\n  // This property is assigned in the super class.\n  readonly properties!: Map<string, PolymerProperty>;\n\n  readonly observers: Observer[];\n  readonly listeners: {event: string, handler: string}[] = [];\n  readonly behaviorAssignments: ScannedReference<'behavior'>[] = [];\n  readonly localIds: LocalId[] = [];\n  readonly pseudo: boolean;\n\n  constructor(scannedMixin: ScannedPolymerElementMixin, document: Document) {\n    super(scannedMixin, document);\n    this.kinds.add('polymer-element-mixin');\n    this.pseudo = scannedMixin.pseudo;\n    this.behaviorAssignments = Array.from(scannedMixin.behaviorAssignments);\n    this.observers = Array.from(scannedMixin.observers);\n  }\n\n  emitPropertyMetadata(property: PolymerProperty) {\n    return {\n      polymer: {\n        notify: property.notify,\n        observer: property.observer,\n        readOnly: property.readOnly,\n        attributeType: property.attributeType,\n      }\n    };\n  }\n\n  protected _getSuperclassAndMixins(\n      document: Document, init: ScannedPolymerElementMixin): Class[] {\n    const prototypeChain = super._getSuperclassAndMixins(document, init);\n\n    const {warnings, behaviors} =\n        getBehaviors(init.behaviorAssignments, document);\n    this.warnings.push(...warnings);\n    prototypeChain.push(...behaviors);\n    return prototypeChain;\n  }\n}\n"]}